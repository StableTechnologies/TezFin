Table Of Contents

 CFA1.2 tests
# Accounts
# Contracts
# Check transferIn
## Try mint with no cash
## First mint
## Second mint
# Check getCash
## Before accrueInterest
## After accrueInterest
## getTotalSupply
# Check setCash
## Try direct call
## Try with callback
# Check transferOut
# Check verifySweepFA12
## With underlying token
## With random token
Comment...
 h1: CFA1.2 tests
Comment...
 h2: Accounts
Computing sp.list([sp.test_account("Alice"), sp.test_account("admin")])...
 => sp.list([sp.record(seed = 'Alice', address = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), public_key = sp.key('edpkuvNy6TuQ2z8o9wnoaTtTXkzQk7nhegCHfxBc4ecsd4qG71KYNG'), public_key_hash = sp.key_hash('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), secret_key = sp.secret_key('edskRijgcXx8gzqkq7SCBbrb6aDZQMmP6dznCQWgU1Jr4qPfJT1yFq5A39ja9G4wahS8uWtBurZy14Hy7GZkQh7WnopJTKtCQG')), sp.record(seed = 'admin', address = sp.address('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), public_key = sp.key('edpkthtmpNV7DzPgvsU5ktVkfYbARpb2nzDbncU8mdbMeXGRhGTjN7'), public_key_hash = sp.key_hash('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), secret_key = sp.secret_key('edskRjPeZkNsmeJ8aAzs5vyXVhP7DVRvG6nM1ReNfjzkR3h6ykbf71mPxQyE5HU9FHrV3EdrY4GVCSBWhU44v6bnhQGrKM9Cs8'))])
Comment...
 h2: Contracts
Creating contract
 -> (Pair (Pair True True) (Pair True True))
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_storage.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_storage.json 1
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_sizes.csv 2
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_storage.py 1
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_types.py 7
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_contract.tz 253
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_contract.json 532
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_contract.py 125
 => ../TezFinTest/CFA1_2_Tests/step_005_cont_0_contract.py.html 2181
Creating contract
 -> (Pair 840000000000 180000000000)
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_storage.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_storage.json 1
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_sizes.csv 2
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_storage.py 1
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_types.py 7
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_contract.tz 50
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_contract.json 116
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_contract.py 27
 => ../TezFinTest/CFA1_2_Tests/step_006_cont_1_contract.py.html 2107
Creating contract
 -> {}
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_storage.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_storage.json 1
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_sizes.csv 2
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_storage.py 1
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_types.py 7
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_contract.tz 348
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_contract.json 384
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_contract.py 36
 => ../TezFinTest/CFA1_2_Tests/step_007_cont_2_contract.py.html 2118
Creating contract
 -> None
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_storage.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_storage.json 1
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_sizes.csv 2
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_storage.py 1
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_types.py 7
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_contract.tz 20
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_contract.json 19
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_contract.py 15
 => ../TezFinTest/CFA1_2_Tests/step_008_cont_3_contract.py.html 2097
Creating contract
 -> (Pair (Pair (Pair (Pair (Pair 0 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {}))) (Pair (Pair 1000000000000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 0 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair False None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 0))))) {Elt 0 { UNPAIR; IF_LEFT { IF_LEFT { IF_LEFT { DROP } { PUSH int -1; FAILWITH } } { PUSH int -1; FAILWITH } } { PUSH int -1; FAILWITH }; DUP; GET 3; GET 6; IF_NONE { PUSH string "CT_NOT_SET_PENDING_ADMIN"; FAILWITH } {}; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_NOT_PENDING_ADMIN"; FAILWITH }; DUP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; CDR; DIG 5; GET 3; GET 6; IF_NONE { PUSH int 593; FAILWITH } {}; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; CAR; NONE address; SWAP; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; NIL operation; PAIR }; Elt 1 { UNPAIR; IF_LEFT { IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT {} { PUSH int -1; FAILWITH } } } { PUSH int -1; FAILWITH } } { PUSH int -1; FAILWITH }; SELF_ADDRESS; SENDER; COMPARE; NEQ; IF {} { PUSH string "CT_INTERNAL_CALL"; FAILWITH }; PUSH nat 0; DUP 3; CAR; CAR; GET 6; SENDER; GET; IF_NONE { PUSH int 281; FAILWITH } {}; GET 3; DUP 3; CAR; GET; IF_NONE { PUSH nat 0 } {}; COMPARE; EQ; IF { PUSH bool True } { DUP; CDR; PUSH nat 0; COMPARE; EQ }; IF {} { PUSH string "CT_UNSAFE_ALLOWANCE_CHANGE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; DUP; SENDER; DUP; DUG 2; GET; IF_NONE { PUSH int 283; FAILWITH } {}; DUP; GET 3; DUP 10; CDR; SOME; DIG 10; CAR; UPDATE; UPDATE 3; SOME; SWAP; UPDATE; SWAP; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; PAIR; NIL operation; PAIR }; Elt 2 { UNPAIR; IF_LEFT { IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } {} } } { PUSH int -1; FAILWITH } } { PUSH int -1; FAILWITH }; SWAP; DUP; DUG 2; GET 3; GET 3; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_SENDER_NOT_IRM"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 8; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 8; UPDATE; PAIR; SWAP; PAIR; PAIR; PAIR; DUP; DUG 2; CAR; GET 3; GET 3; SWAP; DUP; DUG 2; COMPARE; LE; IF {} { PUSH string "CT_INVALID_BORROW_RATE"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; CAR; CAR; LEVEL; SUB; ISNAT; IF_NONE { PUSH int 543; FAILWITH } {}; MUL; SWAP; DUP; DUG 2; CAR; GET 8; DUP 3; GET 7; DUP 3; MUL; EDIV; IF_NONE { PUSH int 58; FAILWITH } { CAR }; DIG 2; DUP; GET 7; DUP 3; ADD; UPDATE 7; DUP; DUP; GET 9; SWAP; DUP; DUG 5; CAR; GET 8; DIG 3; DIG 5; GET 5; CAR; MUL; EDIV; IF_NONE { PUSH int 58; FAILWITH } { CAR }; ADD; UPDATE 9; DUP; DUG 2; UNPAIR; UNPAIR; SWAP; UNPAIR; CDR; DUP 6; CAR; GET 3; CAR; DUP 7; CAR; GET 8; DIG 7; CAR; GET 3; CAR; DIG 7; MUL; EDIV; IF_NONE { PUSH int 58; FAILWITH } { CAR }; ADD; PAIR; PAIR; SWAP; UNPAIR; CDR; LEVEL; PAIR; PAIR; PAIR; PAIR; NIL operation; PAIR }; Elt 3 { UNPAIR; IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { DROP } { PUSH int -1; FAILWITH } } } { PUSH int -1; FAILWITH }; DUP; CAR; CAR; GET 5; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_NOT_ADMIN"; FAILWITH }; UNPAIR; UNPAIR; UNPAIR; SWAP; CDR; EMPTY_SET nat; PAIR; SWAP; PAIR; PAIR; PAIR; NIL operation; PAIR }; Elt 4 { UNPAIR; IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT {} { PUSH int -1; FAILWITH } } } } { PUSH int -1; FAILWITH }; SELF_ADDRESS; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_INTERNAL_FUNCTION"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 12; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 12; UPDATE; PAIR; SWAP; PAIR; PAIR; PAIR; SWAP; DUP; DUP 3; CAR; GET 7; COMPARE; GE; IF {} { PUSH string "CT_INSUFFICIENT_CASH"; FAILWITH }; SWAP; DUP; DUG 2; GET 9; SWAP; DUP; DUG 2; COMPARE; LE; IF {} { PUSH string "CT_REDUCE_AMOUNT"; FAILWITH }; SWAP; DUP; DUG 2; SWAP; DUP; DUG 2; DIG 3; GET 9; SUB; ISNAT; IF_NONE { PUSH string "SUBTRACTION_UNDERFLOW"; FAILWITH } {}; UPDATE 9; SWAP; NIL operation; DUP 3; GET 3; CAR; CAR; CONTRACT %transfer (pair address (pair address nat)); IF_NONE { PUSH int 11; FAILWITH } {}; PUSH mutez 0; DIG 3; DUP 5; CAR; CAR; GET 5; SELF_ADDRESS; PAIR 3; TRANSFER_TOKENS; CONS; SWAP; UNPAIR; SWAP; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; CDR; PUSH bool False; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; SWAP; PAIR }; Elt 5 { UNPAIR; IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { DROP } } } } { PUSH int -1; FAILWITH }; DUP; CAR; CAR; GET 5; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_NOT_ADMIN"; FAILWITH }; UNPAIR; SWAP; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; CAR; NONE address; SWAP; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; NIL operation; PAIR }; Elt 6 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { IF_LEFT {} { PUSH int -1; FAILWITH } } { PUSH int -1; FAILWITH } }; SWAP; DUP; DUG 2; GET 3; GET 3; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_SENDER_NOT_IRM"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 6; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 6; UPDATE; PAIR; SWAP; PAIR; SWAP; UNPAIR; UNPAIR; SWAP; CAR; DIG 5; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; PAIR; NIL operation; PAIR }; Elt 7 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT {} { PUSH int -1; FAILWITH } } } { PUSH int -1; FAILWITH } }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 13; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 13; UPDATE; PAIR; SWAP; PAIR; PAIR; PAIR; DUP; DUG 2; GET 3; CAR; CAR; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_INVALID_CASH_SENDER"; FAILWITH }; SWAP; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; CDR; DIG 5; PAIR; SWAP; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; NIL operation; PAIR }; Elt 8 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } {} } } { PUSH int -1; FAILWITH } }; SWAP; DUP; DUG 2; CAR; CAR; GET 5; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_NOT_ADMIN"; FAILWITH }; SWAP; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; CDR; DIG 4; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; NIL operation; PAIR }; Elt 9 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { IF_LEFT {} { PUSH int -1; FAILWITH } } { PUSH int -1; FAILWITH } } }; SELF_ADDRESS; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_INTERNAL_FUNCTION"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 9; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 9; UPDATE; PAIR; SWAP; PAIR; PAIR; SWAP; UNPAIR; UNPAIR; SWAP; CDR; DIG 4; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; NIL operation; PAIR }; Elt 10 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { IF_LEFT { PUSH int -1; FAILWITH } {} } { PUSH int -1; FAILWITH } } }; SWAP; DUP; DUG 2; CAR; CAR; GET 5; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_NOT_ADMIN"; FAILWITH }; SWAP; UNPAIR; SWAP; UNPAIR; UNPAIR; SWAP; UNPAIR; SWAP; CAR; DIG 5; SOME; SWAP; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; NIL operation; PAIR }; Elt 11 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT {} { PUSH int -1; FAILWITH } } } }; SELF_ADDRESS; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_INTERNAL_FUNCTION"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 10; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 10; UPDATE; PAIR; SWAP; PAIR; PAIR; PAIR; DUP; DUG 2; CAR; CAR; CAR; CAR; LEVEL; SUB; ISNAT; IF_NONE { PUSH string "SUBTRACTION_UNDERFLOW"; FAILWITH } {}; DUP 3; CAR; CAR; CAR; CDR; COMPARE; GT; IF {} { PUSH string "CT_INTEREST_OLD"; FAILWITH }; SWAP; DUP; DUG 2; GET 3; GET 5; IF {} { PUSH string "CT_INTEREST_INVALID"; FAILWITH }; SWAP; DUP; DUG 2; GET 5; GET 3; SWAP; DUP; DUG 2; COMPARE; LE; IF {} { PUSH string "CT_INVALID_RESERVE_FACTOR"; FAILWITH }; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; CDR; DIG 4; PAIR; PAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; CDR; PUSH bool False; PAIR; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; NIL operation; PAIR }; Elt 12 { UNPAIR; IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } { IF_LEFT { PUSH int -1; FAILWITH } {} } } }; SWAP; DUP; DUG 2; GET 3; GET 3; SENDER; COMPARE; EQ; IF {} { PUSH string "CT_SENDER_NOT_IRM"; FAILWITH }; SWAP; DUP; DUG 2; CAR; CAR; GET 3; PUSH nat 7; MEM; IF {} { PUSH string "OP_NOT_ACTIVE"; FAILWITH }; SWAP; UNPAIR; UNPAIR; UNPAIR; SWAP; UNPAIR; PUSH bool False; PUSH nat 7; UPDATE; PAIR; SWAP; PAIR; PAIR; SWAP; UNPAIR; SWAP; UNPAIR; UNPAIR; SWAP; CAR; DIG 5; SWAP; PAIR; SWAP; PAIR; PAIR; SWAP; PAIR; SWAP; PAIR; NIL operation; PAIR }})
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_storage.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_storage.json 1176
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_sizes.csv 2
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_storage.py 1
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_types.py 7
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_contract.tz 4103
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_contract.json 4863
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_contract.py 690
 => ../TezFinTest/CFA1_2_Tests/step_009_cont_4_contract.py.html 2735
Comment...
 h2: Check transferIn
Comment...
 h3: Try mint with no cash
 => ../TezFinTest/CFA1_2_Tests/step_012_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_012_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_012_cont_4_params.json 1
Executing mint(100)...
 -> --- Expected failure in transaction --- Wrong condition: (self.data.isAccrualInterestValid : sp.TBool) (contracts/CToken.py, line 523)
Message: 'CT_INTEREST_INVALID'
 (contracts/CToken.py, line 732)
Comment...
 h3: First mint
 => ../TezFinTest/CFA1_2_Tests/step_014_cont_2_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_014_cont_2_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_014_cont_2_params.json 1
Executing mint(sp.record(address = sp.to_constant(sp.test_account("Alice").address), value = 100))...
 -> {Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {} 100)}
 => ../TezFinTest/CFA1_2_Tests/step_015_cont_2_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_015_cont_2_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_015_cont_2_params.json 1
Executing approve(sp.record(spender = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), value = 100))...
 -> {Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 100} 100)}
 => ../TezFinTest/CFA1_2_Tests/step_016_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_016_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_016_cont_4_params.json 1
Executing accrueInterest(sp.record())...
 -> (Pair (Pair (Pair (Pair 2 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {}))) (Pair (Pair 1000000000000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 0 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 0)))))
 => ../TezFinTest/CFA1_2_Tests/step_017_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_017_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_017_cont_4_params.json 1
Executing mint(100)...
 -> (Pair (Pair (Pair (Pair 2 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000000000000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 0 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair False None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 100)))))
  + Transfer
     params: sp.record(cToken = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), minter = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), mintAmount = 100)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(cToken = sp.TAddress, mintAmount = sp.TNat, minter = sp.TAddress).layout(("cToken", ("minter", "mintAmount"))), sp.address('KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1%mintAllowed')).open_some()
  + Transfer
     params: sp.record(from_ = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), to_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), value = 100)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H%transfer')).open_some()
Executing (queue) mintAllowed(sp.record(cToken = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), minter = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), mintAmount = 100))...
 -> (Pair (Pair True True) (Pair True True))
Executing (queue) transfer(sp.record(from_ = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), to_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), value = 100))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 100); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
Verifying sp.contract_data(4).balances[sp.to_constant(sp.test_account("Alice").address)].balance == 100...
 OK
Comment...
 h3: Second mint
 => ../TezFinTest/CFA1_2_Tests/step_020_cont_2_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_020_cont_2_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_020_cont_2_params.json 1
Executing mint(sp.record(address = sp.to_constant(sp.test_account("admin").address), value = 10))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 100); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {} 10); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
 => ../TezFinTest/CFA1_2_Tests/step_021_cont_2_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_021_cont_2_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_021_cont_2_params.json 1
Executing approve(sp.record(spender = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), value = 10))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 100); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 10} 10); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
 => ../TezFinTest/CFA1_2_Tests/step_022_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_022_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_022_cont_4_params.json 1
Executing accrueInterest(sp.record())...
 -> (Pair (Pair (Pair (Pair 2 5) (Pair {8; 13} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000000000000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 0 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 100)))))
  + Transfer
     params: (sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some())
     amount: sp.tez(0)
     to:     sp.contract(sp.TPair(sp.TAddress, sp.TContract(sp.TNat)), sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H%getBalance')).open_some()
  + Transfer
     params: sp.record(borrows = 0, cash = 0, cb = sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some(), reserves = 0)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(borrows = sp.TNat, cash = sp.TNat, cb = sp.TContract(sp.TNat), reserves = sp.TNat).layout((("borrows", "cash"), ("cb", "reserves"))), sp.address('KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF%getBorrowRate')).open_some()
Executing (queue) getBalance((sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 100); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 10} 10); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
  + Transfer
     params: 100
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()
Executing (queue) setCash(100)...
 -> (Pair (Pair (Pair (Pair 2 5) (Pair {8} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000000000000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 100 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 100)))))
Executing (queue) getBorrowRate(sp.record(borrows = 0, cash = 0, cb = sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some(), reserves = 0))...
 -> (Pair 840000000000 180000000000)
  + Transfer
     params: 840000000000
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some()
Executing (queue) doAccrueInterest(840000000000)...
 -> (Pair (Pair (Pair (Pair 4 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000001680000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 100 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 100)))))
 => ../TezFinTest/CFA1_2_Tests/step_023_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_023_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_023_cont_4_params.json 1
Executing mint(10)...
 -> (Pair (Pair (Pair (Pair 4 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000001680000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 100 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair False None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
  + Transfer
     params: sp.record(cToken = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), minter = sp.address('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), mintAmount = 10)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(cToken = sp.TAddress, mintAmount = sp.TNat, minter = sp.TAddress).layout(("cToken", ("minter", "mintAmount"))), sp.address('KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1%mintAllowed')).open_some()
  + Transfer
     params: sp.record(from_ = sp.address('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), to_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), value = 10)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H%transfer')).open_some()
Executing (queue) mintAllowed(sp.record(cToken = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), minter = sp.address('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), mintAmount = 10))...
 -> (Pair (Pair True True) (Pair True True))
Executing (queue) transfer(sp.record(from_ = sp.address('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), to_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), value = 10))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 110); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
Verifying sp.contract_data(4).balances[sp.to_constant(sp.test_account("admin").address)].balance == 10...
 OK
Comment...
 h2: Check getCash
Comment...
 h3: Before accrueInterest
 => ../TezFinTest/CFA1_2_Tests/step_027_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_027_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_027_cont_4_params.json 1
Executing getCash((sp.unit, sp.contract_typed(KT1Tezooo3zzSmartPyzzSTATiCzzzseJjWC%targetNat)))...
 -> (Pair (Pair (Pair (Pair 4 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000001680000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 100 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair False None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
  + Transfer
     params: 100
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo3zzSmartPyzzSTATiCzzzseJjWC%targetNat')).open_some()
Executing (queue) targetNat(100)...
 -> (Some 100)
Verifying sp.pack(sp.set_type_expr(sp.contract_data(3).last, sp.TOption(sp.TNat))) == sp.pack(sp.set_type_expr(sp.some(100), sp.TOption(sp.TNat)))...
 OK
Comment...
 h3: After accrueInterest
 => ../TezFinTest/CFA1_2_Tests/step_030_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_030_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_030_cont_4_params.json 1
Executing accrueInterest(sp.record())...
 -> (Pair (Pair (Pair (Pair 4 5) (Pair {8; 13} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000001680000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 100 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
  + Transfer
     params: (sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some())
     amount: sp.tez(0)
     to:     sp.contract(sp.TPair(sp.TAddress, sp.TContract(sp.TNat)), sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H%getBalance')).open_some()
  + Transfer
     params: sp.record(borrows = 0, cash = 100, cb = sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some(), reserves = 0)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(borrows = sp.TNat, cash = sp.TNat, cb = sp.TContract(sp.TNat), reserves = sp.TNat).layout((("borrows", "cash"), ("cb", "reserves"))), sp.address('KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF%getBorrowRate')).open_some()
Executing (queue) getBalance((sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 110); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
  + Transfer
     params: 110
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()
Executing (queue) setCash(110)...
 -> (Pair (Pair (Pair (Pair 4 5) (Pair {8} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000001680000000000 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
Executing (queue) getBorrowRate(sp.record(borrows = 0, cash = 100, cb = sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some(), reserves = 0))...
 -> (Pair 840000000000 180000000000)
  + Transfer
     params: 840000000000
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some()
Executing (queue) doAccrueInterest(840000000000)...
 -> (Pair (Pair (Pair (Pair 7 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000004200004233600 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
 => ../TezFinTest/CFA1_2_Tests/step_031_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_031_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_031_cont_4_params.json 1
Executing getCash((sp.unit, sp.contract_typed(KT1Tezooo3zzSmartPyzzSTATiCzzzseJjWC%targetNat)))...
 -> (Pair (Pair (Pair (Pair 7 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000004200004233600 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
  + Transfer
     params: 110
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo3zzSmartPyzzSTATiCzzzseJjWC%targetNat')).open_some()
Executing (queue) targetNat(110)...
 -> (Some 110)
Verifying sp.pack(sp.set_type_expr(sp.contract_data(3).last, sp.TOption(sp.TNat))) == sp.pack(sp.set_type_expr(sp.some(110), sp.TOption(sp.TNat)))...
 OK
Comment...
 h3: getTotalSupply
 => ../TezFinTest/CFA1_2_Tests/step_034_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_034_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_034_cont_4_params.json 1
Executing getTotalSupply((sp.unit, sp.contract_typed(KT1Tezooo3zzSmartPyzzSTATiCzzzseJjWC%targetNat)))...
 -> (Pair (Pair (Pair (Pair 7 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000004200004233600 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
  + Transfer
     params: 110
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo3zzSmartPyzzSTATiCzzzseJjWC%targetNat')).open_some()
Executing (queue) targetNat(110)...
 -> (Some 110)
Verifying sp.pack(sp.set_type_expr(sp.contract_data(3).last, sp.TOption(sp.TNat))) == sp.pack(sp.set_type_expr(sp.some(110), sp.TOption(sp.TNat)))...
 OK
Comment...
 h2: Check setCash
Comment...
 h3: Try direct call
 => ../TezFinTest/CFA1_2_Tests/step_038_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_038_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_038_cont_4_params.json 1
Executing setCash(10)...
 -> --- Expected failure in transaction --- Wrong condition: (self.data.activeOperations.contains(13) : sp.TBool) (contracts/utils/OperationProtector.py, line 38)
Message: 'OP_NOT_ACTIVE'
 (contracts/utils/OperationProtector.py, line 38)
Comment...
 h3: Try with callback
 => ../TezFinTest/CFA1_2_Tests/step_040_cont_2_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_040_cont_2_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_040_cont_2_params.json 1
Executing getBalance((sp.to_constant(sp.test_account("Alice").address), sp.contract_typed(KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash)))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 110); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
  + Transfer
     params: 0
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()
Executing (queue) setCash(0)...
 -> --- Expected failure in transaction --- Wrong condition: (self.data.activeOperations.contains(13) : sp.TBool) (contracts/utils/OperationProtector.py, line 38)
Message: 'OP_NOT_ACTIVE'
 (contracts/utils/OperationProtector.py, line 38)
Comment...
 h2: Check transferOut
 => ../TezFinTest/CFA1_2_Tests/step_042_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_042_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_042_cont_4_params.json 1
Executing accrueInterest(sp.record())...
 -> (Pair (Pair (Pair (Pair 7 5) (Pair {8; 13} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000004200004233600 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
  + Transfer
     params: (sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some())
     amount: sp.tez(0)
     to:     sp.contract(sp.TPair(sp.TAddress, sp.TContract(sp.TNat)), sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H%getBalance')).open_some()
  + Transfer
     params: sp.record(borrows = 0, cash = 110, cb = sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some(), reserves = 0)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(borrows = sp.TNat, cash = sp.TNat, cb = sp.TContract(sp.TNat), reserves = sp.TNat).layout((("borrows", "cash"), ("cb", "reserves"))), sp.address('KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF%getBorrowRate')).open_some()
Executing (queue) getBalance((sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 110); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0)}
  + Transfer
     params: 110
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%setCash')).open_some()
Executing (queue) setCash(110)...
 -> (Pair (Pair (Pair (Pair 7 5) (Pair {8} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000004200004233600 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
Executing (queue) getBorrowRate(sp.record(borrows = 0, cash = 110, cb = sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some(), reserves = 0))...
 -> (Pair 840000000000 180000000000)
  + Transfer
     params: 840000000000
     amount: sp.tez(0)
     to:     sp.contract(sp.TNat, sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3%doAccrueInterest')).open_some()
Executing (queue) doAccrueInterest(840000000000)...
 -> (Pair (Pair (Pair (Pair 12 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 0 0) (Pair {} 100))}))) (Pair (Pair 1000008400021873617 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair True None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 0 (Pair 0 110)))))
 => ../TezFinTest/CFA1_2_Tests/step_043_cont_0_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_043_cont_0_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_043_cont_0_params.json 1
Executing updateAssetPrice(sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'))...
 -> (Pair (Pair True True) (Pair True True))
 => ../TezFinTest/CFA1_2_Tests/step_044_cont_0_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_044_cont_0_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_044_cont_0_params.json 1
Executing updateAccountLiquidity(sp.to_constant(sp.test_account("Alice").address))...
 -> (Pair (Pair True True) (Pair True True))
 => ../TezFinTest/CFA1_2_Tests/step_045_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_045_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_045_cont_4_params.json 1
Executing borrow(10)...
 -> (Pair (Pair (Pair (Pair 12 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 1000008400021873617 10) (Pair {} 100))}))) (Pair (Pair 1000008400021873617 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair False None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 10 (Pair 0 110)))))
  + Transfer
     params: sp.record(cToken = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), borrower = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), borrowAmount = 10)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(borrowAmount = sp.TNat, borrower = sp.TAddress, cToken = sp.TAddress).layout(("cToken", ("borrower", "borrowAmount"))), sp.address('KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1%borrowAllowed')).open_some()
  + Transfer
     params: sp.record(from_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), to_ = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), value = 10)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H%transfer')).open_some()
Executing (queue) borrowAllowed(sp.record(cToken = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), borrower = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), borrowAmount = 10))...
 -> (Pair (Pair True True) (Pair True True))
Executing (queue) transfer(sp.record(from_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), to_ = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), value = 10))...
 -> {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" (Pair {} 100); Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 0); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair {Elt "KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3" 0} 10)}
Verifying sp.contract_data(2).balances[sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3')].balance == 100...
 OK
Verifying sp.contract_data(2).balances[sp.to_constant(sp.test_account("Alice").address)].balance == 10...
 OK
Comment...
 h2: Check verifySweepFA12
Comment...
 h3: With underlying token
 => ../TezFinTest/CFA1_2_Tests/step_050_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_050_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_050_cont_4_params.json 1
Executing sweepFA12(sp.record(amount = 10, tokenAddress = sp.address('KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H')))...
 -> --- Expected failure in transaction --- Wrong condition: (params.tokenAddress != self.data.fa1_2_TokenAddress : sp.TBool) (contracts/CFA12.py, line 44)
Message: 'CT_SWEEP_UNDERLYING'
 (contracts/CFA12.py, line 44)
Comment...
 h3: With random token
 => ../TezFinTest/CFA1_2_Tests/step_052_cont_4_params.py 1
 => ../TezFinTest/CFA1_2_Tests/step_052_cont_4_params.tz 1
 => ../TezFinTest/CFA1_2_Tests/step_052_cont_4_params.json 1
Executing sweepFA12(sp.record(amount = 10, tokenAddress = sp.address('KT10')))...
 -> (Pair (Pair (Pair (Pair 12 5) (Pair {} (Pair "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" {Elt "tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5" (Pair (Pair 0 0) (Pair {} 10)); Elt "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair (Pair 1000008400021873617 10) (Pair {} 100))}))) (Pair (Pair 1000008400021873617 (Pair 5000000000000 0)) (Pair "KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1" (Pair 110 1000000000000000000)))) (Pair (Pair (Pair "KT1Tezooo2zzSmartPyzzSTATiCzzzwqqQ4H" (Pair 500000000000000000 1000000000000000000)) (Pair "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" (Pair False None))) (Pair (Pair 0 (Pair 1000000000000000000 0)) (Pair 10 (Pair 0 110)))))
  + Transfer
     params: sp.record(from_ = sp.address('KT1Tezooo4zzSmartPyzzSTATiCzzzyPVdv3'), to_ = sp.address('tz1UyQDepgtUBnWjyzzonqeDwaiWoQzRKSP5'), value = 10)
     amount: sp.tez(0)
     to:     sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.address('KT10%transfer')).open_some()
 => ../TezFinTest/CFA1_2_Tests/log.html 3659
