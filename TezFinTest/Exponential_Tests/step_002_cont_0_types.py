import smartpy as sp

tstorage = sp.TRecord(expScale = sp.TNat, halfExpScale = sp.TNat, result = sp.TNat).layout(("expScale", ("halfExpScale", "result")))
tparameter = sp.TVariant(testAddExp = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testAddExpNat = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TNat).layout(("a", "b")), testDivExpExp = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testDivExpNat = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TNat).layout(("a", "b")), testDivNatExp = sp.TRecord(a = sp.TNat, b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testLessThanExp = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testLessThanOrEqualExp = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testMulExpExp = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testMulExpNat = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TNat).layout(("a", "b")), testMulExpRounded = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testMulNatExp = sp.TRecord(a = sp.TNat, b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testMulScalarTruncate = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), scalar = sp.TNat).layout(("a", "scalar")), testMulScalarTruncateAdd = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), addend = sp.TNat, scalar = sp.TNat).layout(("a", ("addend", "scalar"))), testSubExpExp = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa"), b = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout(("a", "b")), testSubNatNat = sp.TRecord(a = sp.TNat, b = sp.TNat).layout(("a", "b")), testTruncate = sp.TRecord(a = sp.TRecord(mantissa = sp.TNat).layout("mantissa")).layout("a")).layout((((("testAddExp", "testAddExpNat"), ("testDivExpExp", "testDivExpNat")), (("testDivNatExp", "testLessThanExp"), ("testLessThanOrEqualExp", "testMulExpExp"))), ((("testMulExpNat", "testMulExpRounded"), ("testMulNatExp", "testMulScalarTruncate")), (("testMulScalarTruncateAdd", "testSubExpExp"), ("testSubNatNat", "testTruncate")))))
tglobals = { }
tviews = { }
