parameter (or (or (or (or (unit %acceptGovernance) (or (pair %approve (address %spender) (nat %value)) (nat %doAccrueInterest))) (or (unit %hardResetOp) (or (nat %reduceReservesInternal) (unit %removePendingGovernance)))) (or (or (nat %setBorrowRatePerBlock) (or (address %setComptroller) (address %setInterestRateModelInternal))) (or (address %setPendingGovernance) (or (nat %setReserveFactorInternal) (nat %setSupplyRatePerBlock))))) (or (or (or (or (unit %accrueInterest) (or (nat %addReserves) (pair %addReservesInternal (nat %addAmount) (address %originalSender)))) (or (or (nat %borrow) (pair %borrowBalanceStored address (contract nat))) (or (pair %exchangeRateStored unit (contract nat)) (pair %getAccountSnapshot address (contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa)))))))) (or (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (or (pair %getBalance address (contract nat)) (pair %getBalanceOfUnderlying address (contract nat)))) (or (or (pair %getCash unit (contract nat)) (pair %getTotalSupply unit (contract nat))) (or (nat %mint) (nat %redeem))))) (or (or (or (nat %redeemUnderlying) (or (nat %reduceReserves) (nat %repayBorrow))) (or (or (pair %repayBorrowBehalf (address %borrower) (nat %repayAmount)) (nat %setAccrualIntPeriodRelevance)) (or (address %setInterestRateModel) (nat %setReserveFactor)))) (or (or (or (pair %sweepFA12 (nat %amount) (address %tokenAddress)) (pair %sweepFA2 (nat %amount) (pair (nat %id) (address %tokenAddress)))) (or (bool %sweepMutez) (pair %transfer (address %from) (pair (address %to) (nat %value))))) (or (or (unit %updateBorrowRateInternal) (unit %updateBorrowRatePerBlock)) (or (unit %updateSupplyRateInternal) (unit %updateSupplyRatePerBlock)))))));
storage   (pair (pair (pair (pair (pair (nat %accrualBlockNumber) (nat %accrualIntPeriodRelevance)) (pair (set %activeOperations nat) (pair (address %administrator) (big_map %balances address (pair (pair %accountBorrows (nat %interestIndex) (nat %principal)) (pair (map %approvals address nat) (nat %balance))))))) (pair (pair (nat %borrowIndex) (nat %borrowRateMaxMantissa)) (pair (nat %borrowRatePerBlock) (pair (address %comptroller) (nat %expScale))))) (pair (pair (pair (nat %halfExpScale) (nat %initialExchangeRateMantissa)) (pair (address %interestRateModel) (pair (bool %isAccrualInterestValid) (option %pendingAdministrator address)))) (pair (pair (nat %reserveFactorMantissa) (pair (nat %reserveFactorMaxMantissa) (nat %supplyRatePerBlock))) (pair (nat %totalBorrows) (pair (nat %totalReserves) (nat %totalSupply)))))) (big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))));
code
  {
    CAST (pair (or (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (or (or (or (or unit (or nat (pair nat address))) (or (or nat (pair address (contract nat))) (or (pair unit (contract nat)) (pair address (contract (pair (pair address nat) (pair nat nat))))))) (or (or (pair (pair address address) (contract nat)) (or (pair address (contract nat)) (pair address (contract nat)))) (or (or (pair unit (contract nat)) (pair unit (contract nat))) (or nat nat)))) (or (or (or nat (or nat nat)) (or (or (pair address nat) nat) (or address nat))) (or (or (or (pair nat address) (pair nat (pair nat address))) (or bool (pair address (pair address nat)))) (or (or unit unit) (or unit unit)))))) (pair (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) (big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))))); # pair (or (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (or (or (or (or unit (or nat (pair nat address))) (or (or nat (pair address (contract nat))) (or (pair unit (contract nat)) (pair address (contract (pair (pair address nat) (pair nat nat))))))) (or (or (pair (pair address address) (contract nat)) (or (pair address (contract nat)) (pair address (contract nat)))) (or (or (pair unit (contract nat)) (pair unit (contract nat))) (or nat nat)))) (or (or (or nat (or nat nat)) (or (or (pair address nat) nat) (or address nat))) (or (or (or (pair nat address) (pair nat (pair nat address))) (or bool (pair address (pair address nat)))) (or (or unit unit) (or unit unit)))))) (pair (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) (big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))))
    UNPAIR 3;   # or (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (or (or (or (or unit (or nat (pair nat address))) (or (or nat (pair address (contract nat))) (or (pair unit (contract nat)) (pair address (contract (pair (pair address nat) (pair nat nat))))))) (or (or (pair (pair address address) (contract nat)) (or (pair address (contract nat)) (pair address (contract nat)))) (or (or (pair unit (contract nat)) (pair unit (contract nat))) (or nat nat)))) (or (or (or nat (or nat nat)) (or (or (pair address nat) nat) (or address nat))) (or (or (or (pair nat address) (pair nat (pair nat address))) (or bool (pair address (pair address nat)))) (or (or unit unit) (or unit unit))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
    IF_LEFT
      {
        DUP;        # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                    PUSH nat 0; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 1; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 2; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }
              {
                IF_LEFT
                  {
                    DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                    PUSH nat 3; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 4; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 5; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                    PUSH nat 6; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 7; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 8; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }
              {
                IF_LEFT
                  {
                    DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                    PUSH nat 9; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 10; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        DROP;       # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 11; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
          }; # nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        DUP 4;      # big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))))) : nat : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        SWAP;       # nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))))) : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        GET;        # option (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))))) : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        IF_NONE
          {
            PUSH int -1; # int : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
            FAILWITH;   # FAILED
          }
          {
            # missing entry point # @some : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
          }; # @some : or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        DUG 2;      # or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        PAIR;       # pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) : @some : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        EXEC;       # pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
        UNPAIR;     # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # == accrueInterest ==
                        # if self.data.accrualBlockNumber == 0: # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair nat nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 0; # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        EQ;         # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {
                            # self.data.accrualBlockNumber = sp.level # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair @level nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair @level nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair @level nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair @level nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {}; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # if sp.level != self.data.accrualBlockNumber: # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair nat nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        LEVEL;      # @level : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        NEQ;        # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {
                            # self.data.activeOperations.add(8) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 8; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(borrows = self.data.totalBorrows, cash = sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)), cb = sp.self_entry_point('doAccrueInterest'), reserves = self.data.totalReserves), sp.tez(0), sp.contract(sp.TRecord(borrows = sp.TNat, cash = sp.TNat, cb = sp.TContract(sp.TNat), reserves = sp.TNat).layout((("borrows", "cash"), ("cb", "reserves"))), self.data.interestRateModel, entry_point='getBorrowRate').open_some()) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %getBorrowRate (pair (pair nat nat) (pair (contract nat) nat)); # option (contract (pair (pair nat nat) (pair (contract nat) nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 526; # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 9;      # nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %doAccrueInterest; # @self : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair nat nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair @self nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            NIL operation; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # self.data.isAccrualInterestValid = True # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH bool True; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            # == addReserves ==
                            # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_CALL"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.len(self.data.activeOperations) == 0, 'OP_IN_PROGRESS') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SIZE;       # nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_IN_PROGRESS"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.add(11) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 11; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.unit, sp.tez(0), sp.self_entry_point('accrueInterest')) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %accrueInterest; # @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(addAmount = params, originalSender = sp.sender), sp.amount, sp.self_entry_point('addReservesInternal')) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %addReservesInternal; # @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            AMOUNT;     # @amount : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @amount : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # nat : @sender : @amount : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair nat @sender : @amount : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            # == addReservesInternal ==
                            # sp.verify(sp.sender == sp.self_address, 'CT_INTERNAL_FUNCTION') # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_FUNCTION"; # string : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.activeOperations.contains(11), 'OP_NOT_ACTIVE') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 11; # nat : set nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_NOT_ACTIVE"; # string : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.remove(11) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 11; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.fst(sp.ediv(sp.amount, sp.mutez(1)).open_some(message = sp.unit)) == params.addAmount, 'CT_INVALID_MUTEZ') # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair nat address : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            AMOUNT;     # @amount : mutez : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INVALID_MUTEZ"; # string : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.totalReserves += params.addAmount # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair nat address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 9;   # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.isAccrualInterestValid = False # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        IF_LEFT
                          {
                            # == borrow ==
                            # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_CALL"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if ~ (self.data.balances.contains(sp.sender)): # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # self.data.balances[sp.sender] = sp.record(accountBorrows = sp.record(interestIndex = 0, principal = 0), approvals = {}, balance = 0) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EMPTY_MAP address nat; # map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR 3;     # pair (pair nat nat) (pair (map address nat) nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(cToken = sp.self_address, borrower = sp.sender, borrowAmount = params), sp.tez(0), sp.contract(sp.TRecord(borrowAmount = sp.TNat, borrower = sp.TAddress, cToken = sp.TAddress).layout(("cToken", ("borrower", "borrowAmount"))), self.data.comptroller, entry_point='borrowAllowed').open_some()) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # address : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %borrowAllowed (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 175; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 3;     # pair @self (pair @sender nat) : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) >= params, 'CT_INSUFFICIENT_CASH') # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GE;         # bool : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INSUFFICIENT_CASH"; # string : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @some : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LT;         # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if False:
                            # sp.send(sp.sender, sp.mul(params, sp.mutez(1))) # list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT unit; # option (contract unit) : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 24; # int : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : @some : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # nat : mutez : @some : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MUL;        # mutez : @some : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @some : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : @some : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowSnapshot = sp.local("borrowSnapshot", self.data.balances[sp.sender].accountBorrows) # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 442; # int : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:442 # @some : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowBalance = sp.local("borrowBalance", 0) # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if borrowSnapshot.value.principal > 0: # nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair nat nat : nat : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # borrowBalance.value = (borrowSnapshot.value.principal * self.data.borrowIndex) // borrowSnapshot.value.interestIndex # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair nat nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # pair nat nat : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair nat nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CDR;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 446; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # pair nat nat : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[sp.sender].accountBorrows.principal = borrowBalance.value + params # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 168; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 12;     # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 11;     # nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 2;   # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[sp.sender].accountBorrows.interestIndex = self.data.borrowIndex # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 169; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 12;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair nat nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.totalBorrows += borrowBalance.value + params # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 7;   # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.isAccrualInterestValid = False # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == borrowBalanceStored ==
                            # borrowSnapshot = sp.local("borrowSnapshot", self.data.balances[sp.fst(params)].accountBorrows) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (contract nat) : pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 442; # int : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:442 # @some : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowBalance = sp.local("borrowBalance", 0) # pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if borrowSnapshot.value.principal > 0: # nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair nat nat : nat : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # borrowBalance.value = (borrowSnapshot.value.principal * self.data.borrowIndex) // borrowSnapshot.value.interestIndex # pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair nat nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # pair nat nat : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair nat nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CDR;        # nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 446; # int : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # pair nat nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.result(borrowBalance.value)
                            # sp.transfer(__s2.value, sp.tez(0), sp.snd(params)) # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair address (contract nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == exchangeRateStored ==
                            # excRate = sp.local("excRate", self.data.initialExchangeRateMantissa) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if self.data.totalSupply > 0: # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # sp.verify(self.data.totalSupply > 0, 'DIVISION_BY_ZERO') # pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                COMPARE;    # int : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GT;         # bool : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF
                                  {}
                                  {
                                    PUSH string "DIVISION_BY_ZERO"; # string : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }; # pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # excRate.value = (sp.as_nat((sp.as_nat(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) - 0, message = 'SUBTRACTION_UNDERFLOW') + self.data.totalBorrows) - self.data.totalReserves) * self.data.expScale) // self.data.totalSupply # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUG 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 7;      # nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH mutez 1; # mutez : nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                BALANCE;    # @balance : mutez : nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat mutez) : nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    UNIT;       # unit : nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ADD;        # nat : nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 472; # int : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 235; # int : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {}; # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.result(excRate.value)
                            # sp.transfer(__s3.value, sp.tez(0), sp.snd(params)) # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair unit (contract nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == getAccountSnapshot ==
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @some : nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LT;         # bool : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowSnapshot = sp.local("borrowSnapshot", self.data.balances[sp.fst(params)].accountBorrows) # @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair address (contract (pair (pair address nat) (pair nat nat))) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 442; # int : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:442 # @some : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowBalance = sp.local("borrowBalance", 0) # pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if borrowSnapshot.value.principal > 0: # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair nat nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # borrowBalance.value = (borrowSnapshot.value.principal * self.data.borrowIndex) // borrowSnapshot.value.interestIndex # pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair nat nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # pair nat nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 3;      # pair nat nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CDR;        # nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 446; # int : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {}; # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # excRate = sp.local("excRate", self.data.initialExchangeRateMantissa) # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if self.data.totalSupply > 0: # nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 7;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # nat : pair nat nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # sp.verify(self.data.totalSupply > 0, 'DIVISION_BY_ZERO') # nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                COMPARE;    # int : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GT;         # bool : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF
                                  {}
                                  {
                                    PUSH string "DIVISION_BY_ZERO"; # string : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }; # nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # excRate.value = (sp.as_nat((sp.as_nat(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) - 0, message = 'SUBTRACTION_UNDERFLOW') + self.data.totalBorrows) - self.data.totalReserves) * self.data.expScale) // self.data.totalSupply # nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUG 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 7;      # nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH mutez 1; # mutez : nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                BALANCE;    # @balance : mutez : nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat mutez) : nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    UNIT;       # unit : nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ADD;        # nat : nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 472; # int : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 235; # int : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DIG 2;      # pair nat nat : nat : nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : nat : @some : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # @some : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.result(sp.record(account = sp.fst(params), borrowBalance = borrowBalance.value, cTokenBalance = self.data.balances[sp.fst(params)].balance, exchangeRateMantissa = excRate.value)) # nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair address (contract (pair (pair address nat) (pair nat nat))) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 358; # int : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:358 # @some : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair nat nat : nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair nat nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair address (contract (pair (pair address nat) (pair nat nat))) : nat : pair nat nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : nat : pair nat nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address nat : pair nat nat : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair address nat) (pair nat nat) : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(__s4.value, sp.tez(0), sp.snd(params)) # pair (pair address nat) (pair nat nat) : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair (pair address nat) (pair nat nat) : pair address (contract (pair (pair address nat) (pair nat nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair address (contract (pair (pair address nat) (pair nat nat))) : list operation : pair (pair address nat) (pair nat nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract (pair (pair address nat) (pair nat nat)) : list operation : pair (pair address nat) (pair nat nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract (pair (pair address nat) (pair nat nat)) : list operation : pair (pair address nat) (pair nat nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair address nat) (pair nat nat) : mutez : contract (pair (pair address nat) (pair nat nat)) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair address address) (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # == getAllowance ==
                        # sp.result(self.data.balances[sp.fst(params).owner].approvals[sp.fst(params).spender]) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair address address) (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair address address) (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair address address) (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # pair (pair address address) (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair address address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 340; # int : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:340 # @some : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # @some : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 3;      # map address nat : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair address address) (contract nat) : map address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : map address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # pair (pair address address) (contract nat) : map address nat : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair address address : map address nat : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CDR;        # address : map address nat : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET;        # option nat : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 340; # int : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:340 # @some : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # @some : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # sp.transfer(__s5.value, sp.tez(0), sp.snd(params)) # @some : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        NIL operation; # list operation : @some : pair (pair address address) (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 2;      # pair (pair address address) (contract nat) : list operation : @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CDR;        # contract nat : list operation : @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH mutez 0; # mutez : contract nat : list operation : @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 3;      # @some : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == getBalance ==
                            # sp.result(self.data.balances[sp.fst(params)].balance) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (contract nat) : pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 295; # int : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:295 # @some : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(__s6.value, sp.tez(0), sp.snd(params)) # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair address (contract nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == getBalanceOfUnderlying ==
                            # excRate = sp.local("excRate", self.data.initialExchangeRateMantissa) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if self.data.totalSupply > 0: # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # sp.verify(self.data.totalSupply > 0, 'DIVISION_BY_ZERO') # pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                COMPARE;    # int : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GT;         # bool : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF
                                  {}
                                  {
                                    PUSH string "DIVISION_BY_ZERO"; # string : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }; # pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # excRate.value = (sp.as_nat((sp.as_nat(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) - 0, message = 'SUBTRACTION_UNDERFLOW') + self.data.totalBorrows) - self.data.totalReserves) * self.data.expScale) // self.data.totalSupply # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUG 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 7;      # nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH mutez 1; # mutez : nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                BALANCE;    # @balance : mutez : nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat mutez) : nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    UNIT;       # unit : nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ADD;        # nat : nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 472; # int : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 235; # int : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {}; # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.result((excRate.value * self.data.balances[sp.fst(params)].balance) // self.data.expScale) # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair address (contract nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 312; # int : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:312 # @some : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # nat : nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MUL;        # nat : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat nat) : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 58; # int : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                CAR;        # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(__s7.value, sp.tez(0), sp.snd(params)) # nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair address (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair address (contract nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        IF_LEFT
                          {
                            # == getCash ==
                            # sp.result(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit))) # pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(__s8.value, sp.tez(0), sp.snd(params)) # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair unit (contract nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == getTotalSupply ==
                            # sp.result(self.data.totalSupply) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(__s9.value, sp.tez(0), sp.snd(params)) # nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair unit (contract nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair unit (contract nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            # == mint ==
                            # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_CALL"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if ~ (self.data.balances.contains(sp.sender)): # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # self.data.balances[sp.sender] = sp.record(accountBorrows = sp.record(interestIndex = 0, principal = 0), approvals = {}, balance = 0) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EMPTY_MAP address nat; # map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR 3;     # pair (pair nat nat) (pair (map address nat) nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(cToken = sp.self_address, minter = sp.sender, mintAmount = params), sp.tez(0), sp.contract(sp.TRecord(cToken = sp.TAddress, mintAmount = sp.TNat, minter = sp.TAddress).layout(("cToken", ("minter", "mintAmount"))), self.data.comptroller, entry_point='mintAllowed').open_some()) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # address : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %mintAllowed (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 71; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 3;     # pair @self (pair @sender nat) : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @some : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LT;         # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.fst(sp.ediv(sp.amount, sp.mutez(1)).open_some(message = sp.unit)) == params, 'CT_INVALID_MUTEZ') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            AMOUNT;     # @amount : mutez : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INVALID_MUTEZ"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # excRate = sp.local("excRate", self.data.initialExchangeRateMantissa) # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if self.data.totalSupply > 0: # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP 2;     # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # sp.verify(self.data.totalSupply > 0, 'DIVISION_BY_ZERO') # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                COMPARE;    # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GT;         # bool : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF
                                  {}
                                  {
                                    PUSH string "DIVISION_BY_ZERO"; # string : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # excRate.value = (sp.as_nat((sp.as_nat(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) - params, message = 'SUBTRACTION_UNDERFLOW') + self.data.totalBorrows) - self.data.totalReserves) * self.data.expScale) // self.data.totalSupply # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUG 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 7;      # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 6;      # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH mutez 1; # mutez : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                BALANCE;    # @balance : mutez : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat mutez) : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    UNIT;       # unit : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ADD;        # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 472; # int : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 235; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # amount = sp.local("amount", 0)
                            # if True:
                            # sp.verify(excRate.value > 0, 'DIVISION_BY_ZERO') # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LT;         # bool : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "DIVISION_BY_ZERO"; # string : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_747 = sp.local("compute_CToken_747", (params * self.data.expScale) // excRate.value) # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 8;      # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MUL;        # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat nat) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 247; # int : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                CAR;        # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # amount.value = compute_CToken_747.value
                            # self.data.totalSupply += amount.value # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 10;  # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[sp.sender].balance += amount.value # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 66; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 9;      # nat : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 4;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.isAccrualInterestValid = False # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            # == redeem ==
                            # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_CALL"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(cToken = sp.self_address, redeemer = sp.sender, redeemAmount = params), sp.tez(0), sp.contract(sp.TRecord(cToken = sp.TAddress, redeemAmount = sp.TNat, redeemer = sp.TAddress).layout(("cToken", ("redeemer", "redeemAmount"))), self.data.comptroller, entry_point='redeemAllowed').open_some()) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # address : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %redeemAllowed (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 136; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 3;     # pair @self (pair @sender nat) : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # redeem_amount = sp.local("redeem_amount", 0) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if False:
                            # excRate = sp.local("excRate", self.data.initialExchangeRateMantissa) # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if self.data.totalSupply > 0: # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP 2;     # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # sp.verify(self.data.totalSupply > 0, 'DIVISION_BY_ZERO') # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                COMPARE;    # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GT;         # bool : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF
                                  {}
                                  {
                                    PUSH string "DIVISION_BY_ZERO"; # string : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # excRate.value = (sp.as_nat((sp.as_nat(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) - 0, message = 'SUBTRACTION_UNDERFLOW') + self.data.totalBorrows) - self.data.totalReserves) * self.data.expScale) // self.data.totalSupply # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUG 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 7;      # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH mutez 1; # mutez : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                BALANCE;    # @balance : mutez : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat mutez) : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    UNIT;       # unit : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ADD;        # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 472; # int : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 235; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # amount = sp.local("amount", 0)
                            # if False:
                            # compute_CToken_749 = sp.local("compute_CToken_749", (excRate.value * params) // self.data.expScale) # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 8;      # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MUL;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 58; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # amount.value = compute_CToken_749.value
                            # redeem_amount.value = amount.value
                            # redeem_tokens = sp.local("redeem_tokens", 0)
                            # if False:
                            # redeem_tokens.value = params # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 2;      # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) >= redeem_amount.value, 'CT_INSUFFICIENT_CASH') # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GE;         # bool : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INSUFFICIENT_CASH"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.totalSupply = sp.as_nat(self.data.totalSupply - redeem_tokens.value, message = 'Insufficient supply') # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "Insufficient supply"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 10;  # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[sp.sender].balance = sp.as_nat(self.data.balances[sp.sender].balance - redeem_tokens.value, message = 'Insufficient balance') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 131; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 8;      # nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 11;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 131; # int : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:131 # @some : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "Insufficient balance"; # string : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 4;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if False:
                            # sp.send(sp.sender, sp.mul(redeem_amount.value, sp.mutez(1))) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT unit; # option (contract unit) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 24; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MUL;        # mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.isAccrualInterestValid = False # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        # == redeemUnderlying ==
                        # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SELF_ADDRESS; # @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SENDER;     # @sender : @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        NEQ;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {}
                          {
                            PUSH string "CT_INTERNAL_CALL"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # sp.transfer(sp.record(cToken = sp.self_address, redeemer = sp.sender, redeemAmount = params), sp.tez(0), sp.contract(sp.TRecord(cToken = sp.TAddress, redeemAmount = sp.TNat, redeemer = sp.TAddress).layout(("cToken", ("redeemer", "redeemAmount"))), self.data.comptroller, entry_point='redeemAllowed').open_some()) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 7;      # address : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CONTRACT %redeemAllowed (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 136; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH mutez 0; # mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 4;      # nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SENDER;     # @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SELF_ADDRESS; # @self : @sender : nat : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR 3;     # pair @self (pair @sender nat) : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # redeem_amount = sp.local("redeem_amount", 0)
                        # if True:
                        # redeem_amount.value = params # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # redeem_tokens = sp.local("redeem_tokens", 0) # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 0; # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # if True:
                        # excRate = sp.local("excRate", self.data.initialExchangeRateMantissa) # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair nat nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CDR;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # if self.data.totalSupply > 0: # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 0; # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 7;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 10;     # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GT;         # bool : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {
                            DROP 2;     # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.totalSupply > 0, 'DIVISION_BY_ZERO') # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "DIVISION_BY_ZERO"; # string : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # excRate.value = (sp.as_nat((sp.as_nat(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) - 0, message = 'SUBTRACTION_UNDERFLOW') + self.data.totalBorrows) - self.data.totalReserves) * self.data.expScale) // self.data.totalSupply # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 10;     # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 8;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 9;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 7;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 472; # int : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MUL;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat nat) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 235; # int : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                CAR;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DROP;       # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # amount = sp.local("amount", 0)
                        # if True:
                        # sp.verify(excRate.value > 0, 'DIVISION_BY_ZERO') # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH nat 0; # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        LT;         # bool : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {}
                          {
                            PUSH string "DIVISION_BY_ZERO"; # string : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # compute_CToken_747 = sp.local("compute_CToken_747", (params * self.data.expScale) // excRate.value) # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 8;      # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 4;      # nat : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        MUL;        # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        EDIV;       # option (pair nat nat) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 247; # int : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {
                            CAR;        # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # amount.value = compute_CToken_747.value
                        # redeem_tokens.value = amount.value
                        # sp.verify(sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)) >= redeem_amount.value, 'CT_INSUFFICIENT_CASH') # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH mutez 1; # mutez : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        BALANCE;    # @balance : mutez : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        EDIV;       # option (pair nat mutez) : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            UNIT;       # unit : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # nat : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GE;         # bool : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {}
                          {
                            PUSH string "CT_INSUFFICIENT_CASH"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair nat nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        LEVEL;      # @level : nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SUB;        # int : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        ISNAT;      # option nat : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH string "SUBTRACTION_UNDERFLOW"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair nat nat : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CDR;        # nat : @some : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        COMPARE;    # int : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GT;         # bool : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {}
                          {
                            PUSH string "CT_INTEREST_OLD"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 5;      # bool : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF
                          {}
                          {
                            PUSH string "CT_INTEREST_INVALID"; # string : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # self.data.totalSupply = sp.as_nat(self.data.totalSupply - redeem_tokens.value, message = 'Insufficient supply') # nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 10;     # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SUB;        # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        ISNAT;      # option nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH string "Insufficient supply"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UPDATE 10;  # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # self.data.balances[sp.sender].balance = sp.as_nat(self.data.balances[sp.sender].balance - redeem_tokens.value, message = 'Insufficient balance') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 131; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 8;      # nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 11;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 131; # int : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:131 # @some : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # @some : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        GET 4;      # nat : nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SUB;        # int : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        ISNAT;      # option nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH string "Insufficient balance"; # string : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UPDATE 4;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DUG 2;      # nat : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # if False:
                        # sp.send(sp.sender, sp.mul(redeem_amount.value, sp.mutez(1))) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SENDER;     # @sender : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CONTRACT unit; # option (contract unit) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        IF_NONE
                          {
                            PUSH int 24; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH mutez 1; # mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        DIG 3;      # nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        MUL;        # mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNIT;       # unit : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        # self.data.isAccrualInterestValid = False # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                        SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == reduceReserves ==
                            # sp.verify(sp.sender == self.data.administrator, 'CT_NOT_ADMIN') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_NOT_ADMIN"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.len(self.data.activeOperations) == 0, 'OP_IN_PROGRESS') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SIZE;       # nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_IN_PROGRESS"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.add(12) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 12; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.unit, sp.tez(0), sp.self_entry_point('accrueInterest')) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %accrueInterest; # @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(params, sp.amount, sp.self_entry_point('reduceReservesInternal')) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %reduceReservesInternal; # @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            AMOUNT;     # @amount : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : @amount : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            # == repayBorrow ==
                            # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_CALL"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if ~ (self.data.balances.contains(sp.sender)): # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # self.data.balances[sp.sender] = sp.record(accountBorrows = sp.record(interestIndex = 0, principal = 0), approvals = {}, balance = 0) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EMPTY_MAP address nat; # map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR 3;     # pair (pair nat nat) (pair (map address nat) nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(cToken = sp.self_address, payer = sp.sender, borrower = sp.sender, repayAmount = params), sp.tez(0), sp.contract(sp.TRecord(borrower = sp.TAddress, cToken = sp.TAddress, payer = sp.TAddress, repayAmount = sp.TNat).layout(("cToken", ("payer", ("borrower", "repayAmount")))), self.data.comptroller, entry_point='repayBorrowAllowed').open_some()) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # address : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %repayBorrowAllowed (pair address (pair address (pair address nat))); # option (contract (pair address (pair address (pair address nat)))) : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 225; # int : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # nat : mutez : @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : nat : mutez : @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @sender : nat : mutez : @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : @sender : @sender : nat : mutez : @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 4;     # pair @self (pair @sender (pair @sender nat)) : mutez : @some : list operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # list operation : pair @self (pair @sender (pair @sender nat)) : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DROP;       # pair @self (pair @sender (pair @sender nat)) : mutez : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @some : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LT;         # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowSnapshot = sp.local("borrowSnapshot", self.data.balances[sp.sender].accountBorrows) # @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 442; # int : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:442 # @some : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowBalance = sp.local("borrowBalance", 0) # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if borrowSnapshot.value.principal > 0: # nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair nat nat : nat : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair nat nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # borrowBalance.value = (borrowSnapshot.value.principal * self.data.borrowIndex) // borrowSnapshot.value.interestIndex # pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair nat nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # pair nat nat : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : pair nat nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair nat nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CDR;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 446; # int : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # pair nat nat : nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : @some : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.fst(sp.ediv(sp.amount, sp.mutez(1)).open_some(message = sp.unit)) == sp.min(borrowBalance.value, params), 'CT_INVALID_MUTEZ') # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LE;         # bool : nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                SWAP;       # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DROP;       # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            AMOUNT;     # @amount : mutez : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INVALID_MUTEZ"; # string : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[sp.sender].accountBorrows.principal = sp.as_nat(borrowBalance.value - sp.min(borrowBalance.value, params), message = 'SUBTRACTION_UNDERFLOW') # nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 218; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 10;     # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 14;     # nat : nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LE;         # bool : nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                SWAP;       # nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DROP;       # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 11;     # nat : nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 2;   # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[sp.sender].accountBorrows.interestIndex = self.data.borrowIndex # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @sender : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 219; # int : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 12;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair nat nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # pair nat nat : @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # @some : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.totalBorrows = sp.as_nat(self.data.totalBorrows - sp.min(borrowBalance.value, params), message = 'SUBTRACTION_UNDERFLOW') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LE;         # bool : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                SWAP;       # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DROP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 7;   # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.isAccrualInterestValid = False # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        IF_LEFT
                          {
                            # == repayBorrowBehalf ==
                            # sp.verify(sp.sender != sp.self_address, 'CT_INTERNAL_CALL') # pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_CALL"; # string : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if ~ (self.data.balances.contains(sp.sender)): # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # self.data.balances[sp.sender] = sp.record(accountBorrows = sp.record(interestIndex = 0, principal = 0), approvals = {}, balance = 0) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EMPTY_MAP address nat; # map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR 3;     # pair (pair nat nat) (pair (map address nat) nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(cToken = sp.self_address, payer = sp.sender, borrower = params.borrower, repayAmount = params.repayAmount), sp.tez(0), sp.contract(sp.TRecord(borrower = sp.TAddress, cToken = sp.TAddress, payer = sp.TAddress, repayAmount = sp.TNat).layout(("cToken", ("payer", ("borrower", "repayAmount")))), self.data.comptroller, entry_point='repayBorrowAllowed').open_some()) # pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # address : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %repayBorrowAllowed (pair address (pair address (pair address nat))); # option (contract (pair address (pair address (pair address nat)))) : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 225; # int : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # pair address nat : mutez : @some : list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address nat : pair address nat : mutez : @some : list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : pair address nat : mutez : @some : list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address nat : nat : mutez : @some : list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address nat : pair address nat : nat : mutez : @some : list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 6;      # pair address nat : nat : mutez : @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : nat : mutez : @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : address : nat : mutez : @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : @sender : address : nat : mutez : @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 4;     # pair @self (pair @sender (pair address nat)) : mutez : @some : list operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # list operation : pair @self (pair @sender (pair address nat)) : mutez : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DROP;       # pair @self (pair @sender (pair address nat)) : mutez : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # compute_CToken_730 = sp.local("compute_CToken_730", sp.as_nat(sp.level - self.data.accrualBlockNumber, message = 'SUBTRACTION_UNDERFLOW')) # list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LEVEL;      # @level : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(compute_CToken_730.value < self.data.accrualIntPeriodRelevance, 'CT_INTEREST_OLD') # @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # @some : nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LT;         # bool : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_OLD"; # string : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.isAccrualInterestValid, 'CT_INTEREST_INVALID') # @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # bool : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTEREST_INVALID"; # string : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowSnapshot = sp.local("borrowSnapshot", self.data.balances[params.borrower].accountBorrows) # @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair address nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 442; # int : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:442 # @some : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # borrowBalance = sp.local("borrowBalance", 0) # pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if borrowSnapshot.value.principal > 0: # nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair nat nat : nat : nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GT;         # bool : nat : pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                DROP;       # pair nat nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # borrowBalance.value = (borrowSnapshot.value.principal * self.data.borrowIndex) // borrowSnapshot.value.interestIndex # pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # pair nat nat : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # pair nat nat : nat : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # nat : nat : pair nat nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 2;      # pair nat nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CDR;        # nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                MUL;        # nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EDIV;       # option (pair nat nat) : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 446; # int : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    CAR;        # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # pair nat nat : nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : @some : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # @some : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.fst(sp.ediv(sp.amount, sp.mutez(1)).open_some(message = sp.unit)) == sp.min(borrowBalance.value, params.repayAmount), 'CT_INVALID_MUTEZ') # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # pair address nat : nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LE;         # bool : nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                SWAP;       # nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DROP;       # nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            AMOUNT;     # @amount : mutez : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : nat : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INVALID_MUTEZ"; # string : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[params.borrower].accountBorrows.principal = sp.as_nat(borrowBalance.value - sp.min(borrowBalance.value, params.repayAmount), message = 'SUBTRACTION_UNDERFLOW') # nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 10;     # pair address nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # address : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 218; # int : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 10;     # nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 14;     # pair address nat : nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LE;         # bool : nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                SWAP;       # nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DROP;       # nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 11;     # nat : nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 2;   # pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[params.borrower].accountBorrows.interestIndex = self.data.borrowIndex # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 10;     # pair address nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # address : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 219; # int : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 12;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair nat nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # pair nat nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 1;   # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.totalBorrows = sp.as_nat(self.data.totalBorrows - sp.min(borrowBalance.value, params.repayAmount), message = 'SUBTRACTION_UNDERFLOW') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # pair address nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # nat : nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # nat : nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            LE;         # bool : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                SWAP;       # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DROP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH string "SUBTRACTION_UNDERFLOW"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 7;   # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.isAccrualInterestValid = False # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool False; # bool : option address : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair bool (option address) : address : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair bool (option address) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (pair bool (option address)) : pair nat nat : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair address (pair bool (option address)) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair nat (pair nat nat)) (pair nat (pair nat nat)) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == setAccrualIntPeriodRelevance ==
                            # sp.verify(sp.sender == self.data.administrator, 'CT_NOT_ADMIN') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_NOT_ADMIN"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.accrualIntPeriodRelevance = params # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 4;      # nat : nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == setInterestRateModel ==
                            # sp.verify(sp.sender == self.data.administrator, 'CT_NOT_ADMIN') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # address : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : address : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_NOT_ADMIN"; # string : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.len(self.data.activeOperations) == 0, 'OP_IN_PROGRESS') # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : nat : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SIZE;       # nat : nat : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_IN_PROGRESS"; # string : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.add(9) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 9; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : address : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.unit, sp.tez(0), sp.self_entry_point('accrueInterest')) # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %accrueInterest; # @self : list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @self : list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(params, sp.tez(0), sp.self_entry_point('setInterestRateModelInternal')) # list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %setInterestRateModelInternal; # @self : list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # address : mutez : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == setReserveFactor ==
                            # sp.verify(sp.sender == self.data.administrator, 'CT_NOT_ADMIN') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : address : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_NOT_ADMIN"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(sp.len(self.data.activeOperations) == 0, 'OP_IN_PROGRESS') # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SIZE;       # nat : nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_IN_PROGRESS"; # string : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.add(10) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 10; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.unit, sp.tez(0), sp.self_entry_point('accrueInterest')) # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %accrueInterest; # @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(params, sp.tez(0), sp.self_entry_point('setReserveFactorInternal')) # list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %setReserveFactorInternal; # @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # nat : mutez : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        IF_LEFT
                          {
                            # == sweepFA12 ==
                            # sp.transfer(sp.record(from_ = sp.self_address, to_ = self.data.administrator, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), params.tokenAddress, entry_point='transfer').open_some()) # pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair nat address : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CDR;        # address : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 11; # int : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : @some : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : list operation : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : pair nat address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair nat address : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # address : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            # == sweepFA2 ==
                            # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = self.data.administrator, token_id = params.id, amount = params.amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), params.tokenAddress, entry_point='transfer').open_some()) # pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair nat (pair nat address) : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # address : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))); # option (contract (list (pair address (list (pair address (pair nat nat)))))) : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 36; # int : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : @some : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : list operation : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair nat (pair nat address) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 5;      # pair nat (pair nat address) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair nat (pair nat address) : pair nat (pair nat address) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair nat (pair nat address) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat (pair nat address) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 8;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 5;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            PUSH string "CT_SWEEP_XTZ"; # string : bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            FAILWITH;   # FAILED
                          }
                          {
                            # == transfer ==
                            # sp.verify((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value), 'CT_TRANSFER_NOT_APPROVED') # pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : address : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                PUSH bool True; # bool : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 4;      # nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 3;      # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 247; # int : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    # of_some: Get-item:247 # @some : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # @some : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # map address nat : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : map address nat : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET;        # option nat : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 247; # int : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    # of_some: Get-item:247 # @some : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # @some : nat : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                COMPARE;    # int : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GE;         # bool : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # bool : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_TRANSFER_NOT_APPROVED"; # string : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if ~ (self.data.balances.contains(params.to_)): # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (pair address nat) : pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                SWAP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                # self.data.balances[params.to_] = sp.record(accountBorrows = sp.record(interestIndex = 0, principal = 0), approvals = {}, balance = 0) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH nat 0; # nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                EMPTY_MAP address nat; # map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map address nat : nat : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR 3;     # pair (pair nat nat) (pair (map address nat) nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 8;      # pair address (pair address nat) : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # address : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(cToken = sp.self_address, src = params.from_, dst = params.to_, transferTokens = params.value), sp.tez(0), sp.contract(sp.TRecord(cToken = sp.TAddress, dst = sp.TAddress, src = sp.TAddress, transferTokens = sp.TNat).layout((("cToken", "src"), ("dst", "transferTokens"))), self.data.comptroller, entry_point='transferAllowed').open_some()) # pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # address : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %transferAllowed (pair (pair address address) (pair address nat)); # option (contract (pair (pair address address) (pair address nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 261; # int : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 3;      # pair address (pair address nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (pair address nat) : pair address (pair address nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : pair address (pair address nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair address nat) : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (pair address nat) : pair address (pair address nat) : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 5;      # pair address (pair address nat) : nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # address : nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 5;      # pair address (pair address nat) : pair address nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : pair address nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : address : pair address nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair @self address : pair address nat : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair @self address) (pair address nat) : mutez : @some : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (pair address nat) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.balances[params.from_].balance >= params.value, 'CT_INSUFFICIENT_BALANCE') # pair address (pair address nat) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair address (pair address nat) : pair address (pair address nat) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # pair address (pair address nat) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 253; # int : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:253 # @some : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : nat : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GE;         # bool : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INSUFFICIENT_BALANCE"; # string : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 9;      # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # address : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 254; # int : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 10;     # pair address (pair address nat) : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DIG 11;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 12;     # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 254; # int : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:254 # @some : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # @some : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SUB;        # int : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ISNAT;      # option nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 254; # int : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 4;   # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.balances[params.to_].balance += params.value # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 9;      # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # address : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 255; # int : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # @some : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 11;     # pair address (pair address nat) : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 4;      # nat : nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            ADD;        # nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE 4;   # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUG 2;      # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # if params.from_ != sp.sender: # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 3;      # pair address (pair address nat) : @sender : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # address : @sender : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NEQ;        # bool : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {
                                # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 3;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UNPAIR;     # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 9;      # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # address : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUG 2;      # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 257; # int : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP;        # @some : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DUP 11;     # pair address (pair address nat) : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 4;      # nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 12;     # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 6;      # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : pair address (pair address nat) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DIG 12;     # pair address (pair address nat) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                CAR;        # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET;        # option (pair (pair nat nat) (pair (map address nat) nat)) : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 257; # int : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    # of_some: Get-item:257 # @some : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # @some : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET 3;      # map address nat : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 257; # int : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {
                                    # of_some: Get-item:257 # @some : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                  }; # @some : nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SUB;        # int : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                IF_NONE
                                  {
                                    PUSH int 257; # int : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # map address nat : @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE 3;   # @some : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SOME;       # option (pair (pair nat nat) (pair (map address nat) nat)) : address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : option (pair (pair nat nat) (pair (map address nat) nat)) : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                UPDATE;     # big_map address (pair (pair nat nat) (pair (map address nat) nat)) : address : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # address : big_map address (pair (pair nat nat) (pair (map address nat) nat)) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : set nat : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : list operation : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                SWAP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }
                              {
                                SWAP;       # pair address (pair address nat) : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                DROP;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                              }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }
                  {
                    IF_LEFT
                      {
                        IF_LEFT
                          {
                            DROP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == updateBorrowRateInternal ==
                            # sp.verify(sp.sender == sp.self_address, 'CT_INTERNAL_FUNCTION') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_FUNCTION"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.activeOperations.contains(6), 'OP_NOT_ACTIVE') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 6; # nat : set nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_NOT_ACTIVE"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(borrows = self.data.totalBorrows, cash = sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)), cb = sp.self_entry_point('setBorrowRatePerBlock'), reserves = self.data.totalReserves), sp.tez(0), sp.contract(sp.TRecord(borrows = sp.TNat, cash = sp.TNat, cb = sp.TContract(sp.TNat), reserves = sp.TNat).layout((("borrows", "cash"), ("cb", "reserves"))), self.data.interestRateModel, entry_point='getBorrowRate').open_some()) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %getBorrowRate (pair (pair nat nat) (pair (contract nat) nat)); # option (contract (pair (pair nat nat) (pair (contract nat) nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 382; # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 9;      # nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %setBorrowRatePerBlock; # @self : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair nat nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair @self nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            DROP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == updateBorrowRatePerBlock ==
                            # sp.verify(sp.len(self.data.activeOperations) == 0, 'OP_IN_PROGRESS') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SIZE;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_IN_PROGRESS"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.add(6) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 6; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.unit, sp.tez(0), sp.self_entry_point('updateBorrowRateInternal')) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %updateBorrowRateInternal; # @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == updateSupplyRateInternal ==
                            # sp.verify(sp.sender == sp.self_address, 'CT_INTERNAL_FUNCTION') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF_ADDRESS; # @self : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SENDER;     # @sender : @self : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "CT_INTERNAL_FUNCTION"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.verify(self.data.activeOperations.contains(7), 'OP_NOT_ACTIVE') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 7; # nat : set nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            MEM;        # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_NOT_ACTIVE"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.record(borrows = self.data.totalBorrows, cash = sp.fst(sp.ediv(sp.balance, sp.mutez(1)).open_some(message = sp.unit)), cb = sp.self_entry_point('setSupplyRatePerBlock'), reserves = self.data.totalReserves), sp.tez(0), sp.contract(sp.TRecord(borrows = sp.TNat, cash = sp.TNat, cb = sp.TContract(sp.TNat), reserves = sp.TNat).layout((("borrows", "cash"), ("cb", "reserves"))), self.data.interestRateModel, entry_point='getSupplyRate').open_some()) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # pair (pair nat nat) (pair address (pair bool (option address))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # address : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONTRACT %getSupplyRate (pair (pair nat nat) (pair (contract nat) nat)); # option (contract (pair (pair nat nat) (pair (contract nat) nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                PUSH int 413; # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : @some : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 4;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 9;      # nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %setSupplyRatePerBlock; # @self : nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 1; # mutez : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            BALANCE;    # @balance : mutez : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EDIV;       # option (pair nat mutez) : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF_NONE
                              {
                                UNIT;       # unit : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP 6;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 7;      # nat : nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair nat nat : pair @self nat : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair @self nat) : mutez : @some : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }
                          {
                            DROP;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # == updateSupplyRatePerBlock ==
                            # sp.verify(sp.len(self.data.activeOperations) == 0, 'OP_IN_PROGRESS') # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            DUP;        # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CAR;        # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            GET 3;      # set nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SIZE;       # nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 0; # nat : nat : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            COMPARE;    # int : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            EQ;         # bool : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            IF
                              {}
                              {
                                PUSH string "OP_IN_PROGRESS"; # string : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                                FAILWITH;   # FAILED
                              }; # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # self.data.activeOperations.add(7) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNPAIR;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH bool True; # bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH nat 7; # nat : bool : set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UPDATE;     # set nat : pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair nat nat : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SWAP;       # pair nat nat : pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat))))) : pair (pair nat nat) (pair nat (pair address nat)) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat))) : pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PAIR;       # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            # sp.transfer(sp.unit, sp.tez(0), sp.self_entry_point('updateSupplyRateInternal')) # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            NIL operation; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            SELF %updateSupplyRateInternal; # @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            PUSH mutez 0; # mutez : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            UNIT;       # unit : mutez : @self : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                            CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
                  }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
              }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
          }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
    NIL operation; # list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
    SWAP;       # list operation : list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
      }; # list operation : pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))
    DUG 2;      # pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))) : big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))))) : list operation
    PAIR;       # pair (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) (big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))) : list operation
    SWAP;       # list operation : pair (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) (big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))))))
    PAIR;       # pair (list operation) (pair (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat))))) (big_map nat (lambda (pair (or (or (or unit (or (pair address nat) nat)) (or unit (or nat unit))) (or (or nat (or address address)) (or address (or nat nat)))) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))) (pair (list operation) (pair (pair (pair (pair nat nat) (pair (set nat) (pair address (big_map address (pair (pair nat nat) (pair (map address nat) nat)))))) (pair (pair nat nat) (pair nat (pair address nat)))) (pair (pair (pair nat nat) (pair address (pair bool (option address)))) (pair (pair nat (pair nat nat)) (pair nat (pair nat nat)))))))))
  };