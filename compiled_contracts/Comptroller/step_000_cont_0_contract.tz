parameter (or (or (or (or (or (unit %acceptGovernance) (pair %borrowAllowed (address %cToken) (pair (address %borrower) (nat %borrowAmount)))) (or (address %disableMarket) (or (list %enterMarkets address) (unit %hardResetOp)))) (or (or (pair %liquidateBorrowAllowed (pair (address %borrower) (address %cTokenBorrowed)) (pair (address %cTokenCollateral) (pair (address %liquidator) (nat %repayAmount)))) (or (pair %mintAllowed (address %cToken) (pair (address %minter) (nat %mintAmount))) (pair %redeemAllowed (address %cToken) (pair (address %redeemer) (nat %redeemAmount))))) (or (address %removeFromLoans) (or (pair %repayBorrowAllowed (address %cToken) (pair (address %payer) (pair (address %borrower) (nat %repayAmount)))) (address %setAccountLiquidityWithView))))) (or (or (or (pair %setAccountSnapAndExitMarket (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))) (pair %setBorrowPaused (address %cToken) (bool %state))) (or (nat %setCloseFactor) (or (pair %setCollateralFactor (address %cToken) (nat %newCollateralFactor)) (nat %setLiquidationIncentive)))) (or (or (pair %setMintPaused (address %cToken) (bool %state)) (or (address %setPendingGovernance) (pair %setPriceOracleAndTimeDiff (address %priceOracle) (int %timeDiff)))) (or (bool %setTransferPaused) (or (pair %supportMarket (address %cToken) (pair (string %name) (nat %priceExp))) (pair %transferAllowed (pair (address %cToken) (address %src)) (pair (address %dst) (nat %transferTokens)))))))) (or (or (address %exitMarket) (or (pair %sweepFA12 (nat %amount) (address %tokenAddress)) (pair %sweepFA2 (nat %amount) (pair (nat %id) (address %tokenAddress))))) (or (bool %sweepMutez) (or (address %updateAccountLiquidityWithView) (unit %updateAllAssetPricesWithView)))));
storage   (pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))));
code
  {
    CAST (pair (or (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (or (or address (or (pair nat address) (pair nat (pair nat address)))) (or bool (or address unit)))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))))); # pair (or (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (or (or address (or (pair nat address) (pair nat (pair nat address)))) (or bool (or address unit)))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))))
    UNPAIR 3;   # or (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (or (or address (or (pair nat address) (pair nat (pair nat address)))) (or bool (or address unit))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    IF_LEFT
      {
        DUP;        # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 0; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 1; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 2; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 3; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 4; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 5; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 6; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 7; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 8; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 9; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 10; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 11; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 12; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 13; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 14; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 15; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 16; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 17; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 18; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 19; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 20; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 21; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
          }; # nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        DUP 4;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))) : nat : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        SWAP;       # nat : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))) : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        GET;        # option (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))) : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        IF_NONE
          {
            PUSH int -1; # int : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
            FAILWITH;   # FAILED
          }
          {}; # @some : or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        DUG 2;      # or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : @some : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        PAIR;       # pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) : @some : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        EXEC;       # pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        UNPAIR;     # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                PUSH mutez 1; # mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PUSH nat 0; # nat : mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                MUL;        # mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                AMOUNT;     # @amount : mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                RENAME;     # mutez : mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                COMPARE;    # int : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                EQ;         # bool : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                IF
                  {}
                  {
                    PUSH string "TEZ_TRANSFERED"; # string : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # big_map address (pair int (pair nat bool)) : pair (set nat) address : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # pair (set nat) address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PUSH bool True; # bool : set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PUSH nat 1; # nat : bool : set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                UPDATE;     # set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (set nat) address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # big_map address (pair int (pair nat bool)) : pair (set nat) address : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                CONTRACT %getAccountSnapshot (pair address (contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))))); # option (contract (pair address (contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa)))))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                IF_NONE
                  {
                    PUSH int 113; # int : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                NIL operation; # list operation : @some : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SELF %setAccountSnapAndExitMarket; # @self : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                RENAME;     # contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                SENDER;     # @sender : contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                RENAME;     # address : contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair address (contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    DUP;        # pair nat address : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CDR;        # address : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 17; # int : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @some : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # @some : list operation : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 0; # mutez : @some : list operation : pair nat address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DIG 3;      # pair nat address : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUP 5;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 4;      # address : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # address : address : nat : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR 3;     # pair address (pair address nat) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    DUP;        # pair nat (pair nat address) : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 4;      # address : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 43; # int : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @some : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # @some : list operation : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 0; # mutez : @some : list operation : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair nat (pair nat address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DIG 5;      # pair nat (pair nat address) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUP;        # pair nat (pair nat address) : pair nat (pair nat address) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # nat : pair nat (pair nat address) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # pair nat (pair nat address) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUP 8;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 4;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # address : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair address (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
          }
          {
            IF_LEFT
              {
                IF
                  {
                    DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 4;      # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT %receive unit; # option (contract unit) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 21; # int : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @some : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    BALANCE;    # @balance : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UNIT;       # unit : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 4;      # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT unit; # option (contract unit) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 24; # int : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @some : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    BALANCE;    # @balance : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UNIT;       # unit : mutez : @some : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    PUSH mutez 1; # mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH nat 0; # nat : mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    MUL;        # mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    AMOUNT;     # @amount : mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # mutez : mutez : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    COMPARE;    # int : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    EQ;         # bool : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    IF
                      {}
                      {
                        PUSH string "TEZ_TRANSFERED"; # string : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }; # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUG 2;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # map string address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    ITER
                      {
                        CDR;        # address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        LEVEL;      # @level : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        RENAME;     # nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        DUP 4;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        DUP 3;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        IF_NONE
                          {
                            PUSH int 293; # int : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET 8;      # nat : nat : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        COMPARE;    # int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        LT;         # bool : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        IF
                          {
                            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 296; # int : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 7;      # timestamp : timestamp : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            COMPARE;    # int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            NEQ;        # bool : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF
                              {
                                DIG 2;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 5;      # pair int address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # int : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                SWAP;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : int : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : int : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUG 4;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 5;      # pair int address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CDR;        # address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                PUSH string "-USD"; # string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP 6;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP 5;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                IF_NONE
                                  {
                                    PUSH int 294; # int : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 3;      # pair string nat : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # string : string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CONCAT;     # string : address : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                IF_NONE
                                  {
                                    PUSH string "invalid oracle view call"; # string : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # timestamp : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                NOW;        # @now : timestamp : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                RENAME;     # timestamp : timestamp : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                SUB;        # int : int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                COMPARE;    # int : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                LE;         # bool : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                IF
                                  {}
                                  {
                                    PUSH string "STALE_ASSET_PRICE"; # string : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }; # address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                              }
                              {}; # address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 7;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 298; # int : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair bool nat) (pair bool bool) : pair (pair string nat) (pair nat (pair timestamp nat)) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair string nat) (pair nat (pair timestamp nat)) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair string nat : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 12;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 11;     # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 299; # int : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 13;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # pair int address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH string "-USD"; # string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DIG 14;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 14;     # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 294; # int : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair string nat : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CONCAT;     # string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH string "invalid oracle view call"; # string : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # nat : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            MUL;        # nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # string : nat : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair string nat : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair string nat) (pair nat (pair timestamp nat)) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair bool nat) (pair bool bool) : pair (pair string nat) (pair nat (pair timestamp nat)) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 3;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 7;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 300; # int : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 10;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # pair int address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH string "-USD"; # string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DIG 11;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 11;     # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 294; # int : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair string nat : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CONCAT;     # string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH string "invalid oracle view call"; # string : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # timestamp : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 7;   # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 7;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 301; # int : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            LEVEL;      # @level : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DIG 8;      # address : @level : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DROP;       # @level : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            RENAME;     # nat : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 8;   # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUP 3;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # map string address : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    ITER
                      {
                        CDR;        # address : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        CONTRACT %accrueInterest unit; # option (contract unit) : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        IF_NONE
                          {
                            PUSH int 345; # int : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        PUSH mutez 0; # mutez : @some : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        UNIT;       # unit : mutez : @some : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        TRANSFER_TOKENS; # operation : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        CONS;       # list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DIG 2;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # big_map address (pair int (pair nat bool)) : pair (set nat) address : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # pair (set nat) address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH bool True; # bool : set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH nat 4; # nat : bool : set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    UPDATE;     # set nat : address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (set nat) address : big_map address (pair int (pair nat bool)) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # big_map address (pair int (pair nat bool)) : pair (set nat) address : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (big_map address (pair int (pair nat bool))) (pair (set nat) address) : pair (pair nat (big_map address (set address))) (pair nat nat) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : list operation : address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUG 2;      # list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SELF %setAccountLiquidityWithView; # @self : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # contract address : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 0; # mutez : contract address : list operation : address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DIG 3;      # address : mutez : contract address : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    PUSH mutez 1; # mutez : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    PUSH nat 0; # nat : mutez : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    MUL;        # mutez : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    AMOUNT;     # @amount : mutez : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    RENAME;     # mutez : mutez : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    COMPARE;    # int : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    EQ;         # bool : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    IF
                      {}
                      {
                        PUSH string "TEZ_TRANSFERED"; # string : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }; # unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DUG 2;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # map string address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    ITER
                      {
                        CDR;        # address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        LEVEL;      # @level : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        RENAME;     # nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        DUP 4;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        DUP 3;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        IF_NONE
                          {
                            PUSH int 293; # int : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        GET 8;      # nat : nat : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        COMPARE;    # int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        LT;         # bool : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                        IF
                          {
                            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 296; # int : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 7;      # timestamp : timestamp : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            COMPARE;    # int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            NEQ;        # bool : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF
                              {
                                DIG 2;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 5;      # pair int address : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # int : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                SWAP;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : int : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : int : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUG 4;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 5;      # pair int address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CDR;        # address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                PUSH string "-USD"; # string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP 6;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                DUP 5;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                IF_NONE
                                  {
                                    PUSH int 294; # int : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                GET 3;      # pair string nat : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # string : string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CONCAT;     # string : address : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                IF_NONE
                                  {
                                    PUSH string "invalid oracle view call"; # string : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # timestamp : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                NOW;        # @now : timestamp : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                RENAME;     # timestamp : timestamp : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                SUB;        # int : int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                COMPARE;    # int : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                LE;         # bool : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                IF
                                  {}
                                  {
                                    PUSH string "STALE_ASSET_PRICE"; # string : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }; # address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                              }
                              {}; # address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 7;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 298; # int : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair bool nat) (pair bool bool) : pair (pair string nat) (pair nat (pair timestamp nat)) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair string nat) (pair nat (pair timestamp nat)) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair string nat : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 12;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 11;     # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 299; # int : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 13;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # pair int address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH string "-USD"; # string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DIG 14;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 14;     # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 294; # int : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair string nat : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CONCAT;     # string : address : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH string "invalid oracle view call"; # string : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # nat : nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            MUL;        # nat : string : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # string : nat : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair string nat : pair nat (pair timestamp nat) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair string nat) (pair nat (pair timestamp nat)) : pair (pair bool nat) (pair bool bool) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair bool nat) (pair bool bool) : pair (pair string nat) (pair nat (pair timestamp nat)) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 3;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 7;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 300; # int : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 10;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # pair int address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PUSH string "-USD"; # string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DIG 11;     # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 4;      # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 11;     # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 294; # int : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair string nat : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CONCAT;     # string : address : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH string "invalid oracle view call"; # string : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # timestamp : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 7;   # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP 7;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 301; # int : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            LEVEL;      # @level : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : address : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DIG 8;      # address : @level : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            DROP;       # @level : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            RENAME;     # nat : @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 8;   # @some : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : map string address : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # map string address : big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair nat (big_map address (set address)) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair nat (big_map address (set address)) : pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat)))))) : pair (pair int address) (pair (option address) bool) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat)) : pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : unit : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                          }; # unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                      }; # unit : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    DROP;       # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
                  }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
              }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
          }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
      }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    NIL operation; # list operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    SWAP;       # list operation : list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
      }; # list operation : pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUG 2;      # pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))) : list operation
    PAIR;       # pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))) : list operation
    SWAP;       # list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))))
    PAIR;       # pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))))
  };
view
  "liquidateCalculateSeizeTokens" (pair (nat %actualRepayAmount) (pair (address %cTokenBorrowed) (address %cTokenCollateral))) nat
  {
    UNPAIR 3;   # @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUP;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUG 2;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    SWAP;       # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUP;        # @parameter : @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUG 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    IF_NONE
      {
        PUSH int 304; # int : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }
      {}; # @some : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 8;      # nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    LEVEL;      # @level : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    RENAME;     # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    COMPARE;    # int : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    EQ;         # bool : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    IF
      {}
      {
        PUSH string "CMPT_UPDATE_PRICE"; # string : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }; # @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUP;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUG 2;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    SWAP;       # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUP;        # @parameter : @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUG 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    IF_NONE
      {
        PUSH int 305; # int : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }
      {}; # @some : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (string %name) (nat %price) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    CDR;        # nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    IF_NONE
      {
        PUSH int 304; # int : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    GET 8;      # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    LEVEL;      # @level : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DIG 5;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))) : @level : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DROP;       # @level : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    RENAME;     # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    COMPARE;    # int : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EQ;         # bool : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "CMPT_UPDATE_PRICE"; # string : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 3;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 3;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 305; # int : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (string %name) (nat %price) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    PUSH nat 0; # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 3;      # nat : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    COMPARE;    # int : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    NEQ;        # bool : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {
        DUP;        # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        PUSH nat 0; # nat : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        COMPARE;    # int : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        NEQ;        # bool : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }
      {
        PUSH bool False; # bool : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # bool : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "CMPT_PRICE_ERROR"; # string : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale))) : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 5;      # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 2;      # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 5;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address)) : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # nat : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MUL;        # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EDIV;       # option (pair nat nat) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 207; # int : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale))) : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 5;      # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # @parameter : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # address : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    UNIT;       # unit : address : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    VIEW "exchangeRateStoredView" nat; # option nat : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH string "INVALID EXCHANGE RATE VIEW"; # string : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 3;      # nat : @some : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MUL;        # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EDIV;       # option (pair nat nat) : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 207; # int : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP;        # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    PUSH nat 0; # nat : nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    COMPARE;    # int : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    LT;         # bool : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "DIVISION_BY_ZERO"; # string : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale))) : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 5;      # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 2;      # nat : nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MUL;        # nat : nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EDIV;       # option (pair nat nat) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 244; # int : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # nat : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 2;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @parameter
    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale))) : nat : @parameter
    GET 5;      # nat : nat : @parameter
    DIG 2;      # @parameter : nat : nat
    CAR;        # nat : nat : nat
    DIG 2;      # nat : nat : nat
    MUL;        # nat : nat
    EDIV;       # option (pair nat nat)
    IF_NONE
      {
        PUSH int 61; # int
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat
      }; # nat
  };
view
  "seizeAllowed" (pair (address %cTokenBorrowed) (address %cTokenCollateral)) bool
  {
    UNPAIR 3;   # @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))))
    DIG 2;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (pair address bool)) (or nat (or (pair address nat) nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (big_map address (pair int (pair nat bool))) (pair (set nat) address)) (pair (pair nat (big_map address (set address))) (pair nat nat))) (pair (pair (pair nat (big_map address (set address))) (pair (map string address) (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))))) (pair (pair int address) (pair (option address) bool)))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DROP;       # @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
    DUP;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
    DUG 2;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    SWAP;       # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP;        # @parameter : @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUG 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MEM;        # bool : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {
        SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
        DUP;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
        DUG 2;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        SWAP;       # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DUP;        # @parameter : @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DUG 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        CAR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        IF_NONE
          {
            PUSH int 730; # int : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
            FAILWITH;   # FAILED
          }
          {}; # @some : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        CAR;        # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # bool : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }
      {
        PUSH bool False; # bool : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # bool : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "CMPT_MARKET_NOT_LISTED"; # string : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
    DUP;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
    DUG 2;      # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    SWAP;       # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP;        # @parameter : @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUG 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MEM;        # bool : @parameter : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {
        SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
        GET 3;      # pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))))) : @parameter
        GET 4;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
        SWAP;       # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))
        DUP;        # @parameter : @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))
        DUG 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
        CDR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
        GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
        IF_NONE
          {
            PUSH int 730; # int : @parameter
            FAILWITH;   # FAILED
          }
          {}; # @some : @parameter
        CAR;        # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : @parameter
        GET 3;      # bool : @parameter
      }
      {
        SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (pair (set %activeOperations nat) (address %administrator))) (pair (pair (nat %closeFactorMantissa) (big_map %collaterals address (set address))) (pair (nat %expScale) (nat %halfExpScale)))) (pair (pair (pair (nat %liquidationIncentiveMantissa) (big_map %loans address (set address))) (pair (map %marketNameToAddress string address) (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
        DROP;       # @parameter
        PUSH bool False; # bool : @parameter
      }; # bool : @parameter
    IF
      {}
      {
        PUSH string "CMPT_MARKET_NOT_LISTED"; # string : @parameter
        FAILWITH;   # FAILED
      }; # @parameter
    DUP;        # @parameter : @parameter
    CDR;        # address : @parameter
    UNIT;       # unit : address : @parameter
    VIEW "comptroller" address; # option address : @parameter
    IF_NONE
      {
        PUSH string "INVALID COMPTROLLER VIEW"; # string : @parameter
        FAILWITH;   # FAILED
      }
      {}; # @some : @parameter
    SWAP;       # @parameter : @some
    CAR;        # address : @some
    UNIT;       # unit : address : @some
    VIEW "comptroller" address; # option address : @some
    IF_NONE
      {
        PUSH string "INVALID COMPTROLLER VIEW"; # string : @some
        FAILWITH;   # FAILED
      }
      {}; # @some : @some
    COMPARE;    # int
    EQ;         # bool
    IF
      {}
      {
        PUSH string "CMPT_COMPTROLLER_MISMATCH"; # string
        FAILWITH;   # FAILED
      }; # 
    PUSH bool True; # bool
  };