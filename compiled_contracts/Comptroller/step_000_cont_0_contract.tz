parameter (or (or (or (or (or (unit %acceptGovernance) (pair %borrowAllowed (address %cToken) (pair (address %borrower) (nat %borrowAmount)))) (or (address %disableMarket) (or (list %enterMarkets address) (unit %hardResetOp)))) (or (or (pair %liquidateBorrowAllowed (pair (address %borrower) (address %cTokenBorrowed)) (pair (address %cTokenCollateral) (pair (address %liquidator) (nat %repayAmount)))) (or (pair %mintAllowed (address %cToken) (pair (address %minter) (nat %mintAmount))) (pair %redeemAllowed (address %cToken) (pair (address %redeemer) (nat %redeemAmount))))) (or (address %removeFromLoans) (or (pair %repayBorrowAllowed (address %cToken) (pair (address %payer) (pair (address %borrower) (nat %repayAmount)))) (address %setAccountLiquidityWithView))))) (or (or (or (pair %setAccountSnapAndExitMarket (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))) (or (pair %setBorrowPaused (address %cToken) (bool %state)) (nat %setCloseFactor))) (or (pair %setCollateralFactor (address %cToken) (nat %newCollateralFactor)) (or (nat %setLiquidationIncentive) (nat %setMaxAssetsPerUser)))) (or (or (pair %setMintPaused (address %cToken) (bool %state)) (or (address %setPendingGovernance) (pair %setPriceOracleAndTimeDiff (address %priceOracle) (int %timeDiff)))) (or (bool %setTransferPaused) (or (pair %supportMarket (address %cToken) (pair (string %name) (nat %priceExp))) (pair %transferAllowed (pair (address %cToken) (address %src)) (pair (address %dst) (nat %transferTokens)))))))) (or (or (address %exitMarket) (or (pair %sweepFA12 (nat %amount) (address %tokenAddress)) (pair %sweepFA2 (nat %amount) (pair (nat %id) (address %tokenAddress))))) (or (bool %sweepMutez) (or (address %updateAccountLiquidityWithView) (unit %updateAllAssetPricesWithView)))));
storage   (pair (pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))));
code
  {
    UNPAIR 3;   # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF_LEFT
      {
        DUP;        # @parameter.left : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == acceptGovernance == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 0; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == borrowAllowed == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 1; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == disableMarket == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 2; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == enterMarkets == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 3; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == hardResetOp == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 4; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == liquidateBorrowAllowed == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 5; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == mintAllowed == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 6; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == redeemAllowed == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 7; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == removeFromLoans == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 8; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == repayBorrowAllowed == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 9; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setAccountLiquidityWithView == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 10; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == setAccountSnapAndExitMarket == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 11; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setBorrowPaused == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 12; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setCloseFactor == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 13; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == setCollateralFactor == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 14; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setLiquidationIncentive == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 15; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setMaxAssetsPerUser == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 16; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == setMintPaused == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 17; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setPendingGovernance == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 18; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == setPriceOracleAndTimeDiff == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 19; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    IF_LEFT
                      {
                        DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # == setTransferPaused == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH nat 20; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }
                      {
                        IF_LEFT
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == supportMarket == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 21; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # == transferAllowed == # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH nat 22; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
          }; # nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        DUP 4;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : nat : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        SWAP;       # nat : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        GET;        # option (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        IF_NONE
          {
            PUSH int -1; # int : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
            FAILWITH;   # FAILED
          }
          {
            # missing entrypoint # @some : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
          }; # @some : @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        DUG 2;      # @parameter.left : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @some : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        PAIR;       # pair @parameter.left (pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))) : @some : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        EXEC;       # pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        UNPAIR;     # list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # == exitMarket ==
                # sp.verify(sp.amount == sp.mul(sp.set_type_expr(0, sp.TNat), sp.mutez(1)), 'TEZ_TRANSFERED') # @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PUSH mutez 1; # mutez : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PUSH nat 0; # nat : mutez : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                MUL;        # mutez : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                AMOUNT;     # @amount : mutez : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                COMPARE;    # int : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                EQ;         # bool : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                IF
                  {}
                  {
                    PUSH string "TEZ_TRANSFERED"; # string : @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    FAILWITH;   # FAILED
                  }; # @parameter%exitMarket : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                # self.data.activeOperations.add(1) # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                UNPAIR;     # big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : set nat : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PUSH bool True; # bool : set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PUSH nat 1; # nat : bool : set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                UPDATE;     # set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : set nat : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%exitMarket : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # @parameter%exitMarket : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                # sp.transfer((sp.sender, sp.self_entrypoint('setAccountSnapAndExitMarket')), sp.tez(0), sp.contract(sp.TPair(sp.TAddress, sp.TContract(sp.TRecord(account = sp.TAddress, borrowBalance = sp.TNat, cTokenBalance = sp.TNat, exchangeRateMantissa = sp.TNat).layout((("account", "borrowBalance"), ("cTokenBalance", "exchangeRateMantissa"))))), params, entrypoint='getAccountSnapshot').open_some()) # @parameter%exitMarket : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                CONTRACT %getAccountSnapshot (pair address (contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa))))); # option (contract (pair address (contract (pair (pair (address %account) (nat %borrowBalance)) (pair (nat %cTokenBalance) (nat %exchangeRateMantissa)))))) : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                IF_NONE
                  {
                    PUSH int 118; # int : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                NIL operation; # list operation : @some : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SWAP;       # @some : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SELF %setAccountSnapAndExitMarket; # @self : mutez : @some : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                SENDER;     # @sender : @self : mutez : @some : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                PAIR;       # pair @sender @self : mutez : @some : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                CONS;       # list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    # == sweepFA12 ==
                    # sp.transfer(sp.record(from_ = sp.self_address, to_ = self.data.administrator, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), params.tokenAddress, entrypoint='transfer').open_some()) # @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 2;      # @parameter%sweepFA12 : list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CDR;        # address : list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 17; # int : list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%sweepFA12 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DIG 3;      # @parameter%sweepFA12 : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # nat : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 5;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # address : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    # == sweepFA2 ==
                    # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(amount = params.amount, to_ = self.data.administrator, token_id = params.id)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), params.tokenAddress, entrypoint='transfer').open_some()) # @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 2;      # @parameter%sweepFA2 : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 4;      # address : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 43; # int : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%sweepFA2 : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DIG 5;      # @parameter%sweepFA2 : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP;        # @parameter%sweepFA2 : @parameter%sweepFA2 : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # nat : @parameter%sweepFA2 : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # @parameter%sweepFA2 : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 8;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }; # list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
          }
          {
            IF_LEFT
              {
                # == sweepMutez ==
                # if params: # @parameter%sweepMutez : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                IF
                  {
                    # sp.send(self.data.administrator, sp.balance) # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # address : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT %receive unit; # option (contract unit) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 21; # int : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    BALANCE;    # @balance : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UNIT;       # unit : @balance : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    # sp.send(self.data.administrator, sp.balance) # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # address : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONTRACT unit; # option (contract unit) : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    IF_NONE
                      {
                        PUSH int 24; # int : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    BALANCE;    # @balance : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UNIT;       # unit : @balance : @some : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }
              {
                IF_LEFT
                  {
                    # == updateAccountLiquidityWithView ==
                    # sp.verify(sp.amount == sp.mul(sp.set_type_expr(0, sp.TNat), sp.mutez(1)), 'TEZ_TRANSFERED') # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 1; # mutez : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH nat 0; # nat : mutez : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    MUL;        # mutez : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    AMOUNT;     # @amount : mutez : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    COMPARE;    # int : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    EQ;         # bool : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    IF
                      {}
                      {
                        PUSH string "TEZ_TRANSFERED"; # string : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    # for asset in self.data.marketNameToAddress.values(): ... # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CDR;        # map string address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    ITER
                      {
                        CDR;        # address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # if self.data.markets[asset].updateLevel < sp.level: # address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        LEVEL;      # @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        DUP 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        IF_NONE
                          {
                            PUSH int 303; # int : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET 8;      # nat : @level : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        COMPARE;    # int : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        LT;         # bool : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        IF
                          {
                            # pricePair = sp.local("pricePair", sp.view("getPrice", self.data.markets[asset].name + '-USD', self.data.oracleAddress, sp.TPair(sp.TTimestamp, sp.TNat)).open_some(message = 'invalid oracle view call')) # address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # pair (int %maxPriceTimeDifference) (address %oracleAddress) : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH string "-USD"; # string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 5;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 305; # int : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (string %name) (nat %price) : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CONCAT;     # string : address : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH string "invalid oracle view call"; # string : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # if self.data.markets[asset].priceTimestamp != sp.timestamp(0): # @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 5;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 308; # int : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 7;      # timestamp : timestamp : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            COMPARE;    # int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            NEQ;        # bool : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF
                              {
                                # sp.verify((sp.now - sp.fst(pricePair.value)) <= self.data.maxPriceTimeDifference, 'STALE_ASSET_PRICE') # @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                GET 5;      # pair (int %maxPriceTimeDifference) (address %oracleAddress) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                DUP 2;      # @some : int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # timestamp : int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                NOW;        # @now : timestamp : int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                SUB;        # int : int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                COMPARE;    # int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                LE;         # bool : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                IF
                                  {}
                                  {
                                    PUSH string "STALE_ASSET_PRICE"; # string : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }; # @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                              }
                              {}; # @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # self.data.markets[asset].price = sp.record(mantissa = sp.snd(pricePair.value) * self.data.markets[asset].priceExp) # @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 311; # int : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # nat : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 2;      # @some : nat : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # nat : nat : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            MUL;        # nat : @some : address : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser) : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 9;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 310; # int : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (string %name) (nat %price) : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 9;      # nat : string : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # string : nat : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair string nat : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # self.data.markets[asset].priceTimestamp = sp.fst(pricePair.value) # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 8;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 312; # int : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 8;      # @some : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # timestamp : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 7;   # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # self.data.markets[asset].updateLevel = sp.level # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 8;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 313; # int : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            LEVEL;      # @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 8;      # @some : @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DROP;       # @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : address : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 8;      # address : @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DROP;       # @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 8;   # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    # for asset in self.data.marketNameToAddress.values(): ... # @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CDR;        # map string address : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    ITER
                      {
                        CDR;        # address : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # sp.send(asset, sp.tez(0)) # address : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        CONTRACT %accrueInterest unit; # option (contract unit) : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        IF_NONE
                          {
                            PUSH int 357; # int : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        UNIT;       # unit : mutez : @some : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        CONS;       # list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    # self.data.activeOperations.add(4) # list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DIG 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UNPAIR;     # big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : set nat : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH bool True; # bool : set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH nat 4; # nat : bool : set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    UPDATE;     # set nat : big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    SWAP;       # big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid))) : set nat : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat) : pair (address %administrator) (nat %closeFactorMantissa) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa)) : pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PAIR;       # pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : list operation : @parameter%updateAccountLiquidityWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUG 2;      # list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    # sp.transfer(params, sp.tez(0), sp.self_entrypoint('setAccountLiquidityWithView')) # list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    SELF %setAccountLiquidityWithView; # @self : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 0; # mutez : @self : list operation : @parameter%updateAccountLiquidityWithView : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DIG 3;      # @parameter%updateAccountLiquidityWithView : mutez : @self : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CONS;       # list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }
                  {
                    # == updateAllAssetPricesWithView ==
                    # sp.verify(sp.amount == sp.mul(sp.set_type_expr(0, sp.TNat), sp.mutez(1)), 'TEZ_TRANSFERED') # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH mutez 1; # mutez : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    PUSH nat 0; # nat : mutez : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    MUL;        # mutez : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    AMOUNT;     # @amount : mutez : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    COMPARE;    # int : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    EQ;         # bool : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    IF
                      {}
                      {
                        PUSH string "TEZ_TRANSFERED"; # string : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    # for asset in self.data.marketNameToAddress.values(): ... # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CAR;        # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    CDR;        # map string address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    ITER
                      {
                        CDR;        # address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        # if self.data.markets[asset].updateLevel < sp.level: # address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        LEVEL;      # @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        DUP 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        IF_NONE
                          {
                            PUSH int 303; # int : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        GET 8;      # nat : @level : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        COMPARE;    # int : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        LT;         # bool : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                        IF
                          {
                            # pricePair = sp.local("pricePair", sp.view("getPrice", self.data.markets[asset].name + '-USD', self.data.oracleAddress, sp.TPair(sp.TTimestamp, sp.TNat)).open_some(message = 'invalid oracle view call')) # address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # pair (int %maxPriceTimeDifference) (address %oracleAddress) : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH string "-USD"; # string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 5;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 305; # int : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (string %name) (nat %price) : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CONCAT;     # string : address : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            VIEW "getPrice" (pair timestamp nat); # option (pair timestamp nat) : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH string "invalid oracle view call"; # string : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # if self.data.markets[asset].priceTimestamp != sp.timestamp(0): # @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 5;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 308; # int : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 7;      # timestamp : timestamp : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            COMPARE;    # int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            NEQ;        # bool : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF
                              {
                                # sp.verify((sp.now - sp.fst(pricePair.value)) <= self.data.maxPriceTimeDifference, 'STALE_ASSET_PRICE') # @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                GET 5;      # pair (int %maxPriceTimeDifference) (address %oracleAddress) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                DUP 2;      # @some : int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                CAR;        # timestamp : int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                NOW;        # @now : timestamp : int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                SUB;        # int : int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                COMPARE;    # int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                LE;         # bool : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                IF
                                  {}
                                  {
                                    PUSH string "STALE_ASSET_PRICE"; # string : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                    FAILWITH;   # FAILED
                                  }; # @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                              }
                              {}; # @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # self.data.markets[asset].price = sp.record(mantissa = sp.snd(pricePair.value) * self.data.markets[asset].priceExp) # @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 311; # int : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET 5;      # nat : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 2;      # @some : nat : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CDR;        # nat : nat : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            MUL;        # nat : @some : address : @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser) : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 9;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 310; # int : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UNPAIR;     # pair (string %name) (nat %price) : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # string : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 9;      # nat : string : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # string : nat : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair string nat : pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # self.data.markets[asset].priceTimestamp = sp.fst(pricePair.value) # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 8;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 312; # int : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 8;      # @some : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            CAR;        # timestamp : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 7;   # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            # self.data.markets[asset].updateLevel = sp.level # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP 8;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUP;        # address : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DUG 2;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            IF_NONE
                              {
                                PUSH int 313; # int : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            LEVEL;      # @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @some : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 8;      # @some : @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DROP;       # @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : address : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DIG 8;      # address : @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            DROP;       # @level : @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE 8;   # @some : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SOME;       # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # address : option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            UPDATE;     # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat : pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat) : pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            PAIR;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter%updateAllAssetPricesWithView : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                            SWAP;       # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }
                          {
                            DROP;       # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                          }; # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair string nat) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) nat)) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                      }; # @parameter%updateAllAssetPricesWithView : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    DROP;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                    NIL operation; # list operation : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
                  }; # list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
              }; # list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
          }; # list operation : pair (pair (pair (pair (big_map address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
      }; # list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    NIL operation; # list operation : list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    SWAP;       # list operation : list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
      }; # list operation : pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUG 2;      # pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : list operation
    PAIR;       # pair (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))) : list operation
    SWAP;       # list operation : pair (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))))
    PAIR;       # pair (list operation) (pair (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))) (big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))))
  };
view
  "getMaxAssetsPerUser" unit nat
  {
    GET 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # sp.result(self.data.maxAssetsPerUser) # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))
    GET 4;      # nat
  };
view
  "getUserAssetsCount" address nat
  {
    UNPAIR 3;   # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    # unique_assets = sp.local("unique_assets", sp.set([]), sp.TSet(sp.TAddress)) # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    EMPTY_SET address; # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    # if self.data.collaterals.contains(params): # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (big_map %collaterals address (set address)) (nat %expScale) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    CAR;        # big_map address (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # @parameter : big_map address (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    MEM;        # bool : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF
      {
        # for asset in self.data.collaterals[params].elements(): ... # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        GET 3;      # pair (big_map %collaterals address (set address)) (nat %expScale) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        CAR;        # big_map address (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        DUP 3;      # @parameter : big_map address (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        GET;        # option (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        IF_NONE
          {
            PUSH int 815; # int : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
            FAILWITH;   # FAILED
          }
          {}; # @some : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        ITER
          {
            SWAP;       # set address : address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
            # unique_assets.value.add(asset) # set address : address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
            PUSH bool True; # bool : set address : address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
            DIG 2;      # address : bool : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
            UPDATE;     # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
          }; # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
      }
      {}; # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    # if self.data.loans.contains(params): # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    CAR;        # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    CAR;        # big_map address (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # @parameter : big_map address (set address) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    MEM;        # bool : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF
      {
        DIG 3;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DROP;       # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        # for asset in self.data.loans[params].elements(): ... # set address : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DIG 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : set address : @parameter
        GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : set address : @parameter
        CAR;        # pair (big_map %loans address (set address)) (map %marketNameToAddress string address) : set address : @parameter
        CAR;        # big_map address (set address) : set address : @parameter
        DIG 2;      # @parameter : big_map address (set address) : set address
        GET;        # option (set address) : set address
        IF_NONE
          {
            PUSH int 819; # int : set address
            FAILWITH;   # FAILED
          }
          {}; # @some : set address
        ITER
          {
            SWAP;       # set address : address
            # unique_assets.value.add(asset) # set address : address
            PUSH bool True; # bool : set address : address
            DIG 2;      # address : bool : set address
            UPDATE;     # set address
          }; # set address
      }
      {
        SWAP;       # @parameter : set address : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        DROP;       # set address : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        SWAP;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : set address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        DROP;       # set address : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        SWAP;       # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : set address
        DROP;       # set address
      }; # set address
    # sp.result(sp.len(unique_assets.value)) # set address
    SIZE;       # nat
  };
view
  "liquidateCalculateSeizeTokens" (pair (nat %actualRepayAmount) (pair (address %cTokenBorrowed) (address %cTokenCollateral))) (pair nat nat)
  {
    UNPAIR 3;   # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    # sp.verify(sp.level == self.data.markets[params.cTokenBorrowed].updateLevel, 'CMPT_UPDATE_PRICE') # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF_NONE
      {
        PUSH int 316; # int : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }
      {}; # @some : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 8;      # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    LEVEL;      # @level : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    COMPARE;    # int : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    EQ;         # bool : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF
      {}
      {
        PUSH string "CMPT_UPDATE_PRICE"; # string : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }; # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    # priceBorrowedMantissa = sp.local("priceBorrowedMantissa", self.data.markets[params.cTokenBorrowed].price) # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF_NONE
      {
        PUSH int 317; # int : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }
      {}; # @some : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (string %name) (nat %price) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    CDR;        # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    # sp.verify(sp.level == self.data.markets[params.cTokenCollateral].updateLevel, 'CMPT_UPDATE_PRICE') # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DUP 3;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    IF_NONE
      {
        PUSH int 316; # int : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    GET 8;      # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    LEVEL;      # @level : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DIG 5;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : @level : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DROP;       # @level : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    COMPARE;    # int : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EQ;         # bool : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "CMPT_UPDATE_PRICE"; # string : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # priceCollateralMantissa = sp.local("priceCollateralMantissa", self.data.markets[params.cTokenCollateral].price) # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 3;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 317; # int : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (string %name) (nat %price) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # sp.verify((priceBorrowedMantissa.value.mantissa != 0) & (priceCollateralMantissa.value.mantissa != 0), 'CMPT_PRICE_ERROR') # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    PUSH nat 0; # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 3;      # nat : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    COMPARE;    # int : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    NEQ;        # bool : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {
        PUSH nat 0; # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DUP 2;      # nat : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        COMPARE;    # int : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        NEQ;        # bool : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }
      {
        PUSH bool False; # bool : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # bool : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "CMPT_PRICE_ERROR"; # string : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # numerator = sp.local("numerator", sp.record(mantissa = (self.data.liquidationIncentiveMantissa * priceBorrowedMantissa.value.mantissa) // self.data.expScale)) # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (big_map %collaterals address (set address)) (nat %expScale) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 2;      # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 5;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 6;      # nat : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MUL;        # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EDIV;       # option (pair nat nat) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 207; # int : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # denominator = sp.local("denominator", sp.record(mantissa = (priceCollateralMantissa.value.mantissa * sp.fst(sp.view("exchangeRateStoredView", sp.unit, params.cTokenCollateral, sp.TPair(sp.TNat, sp.TNat)).open_some(message = 'INVALID EXCHANGE RATE VIEW'))) // self.data.expScale)) # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (big_map %collaterals address (set address)) (nat %expScale) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # @parameter : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # address : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    UNIT;       # unit : address : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    VIEW "exchangeRateStoredView" (pair nat nat); # option (pair nat nat) : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH string "INVALID EXCHANGE RATE VIEW"; # string : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # nat : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 3;      # nat : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MUL;        # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EDIV;       # option (pair nat nat) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 207; # int : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # sp.verify(denominator.value.mantissa > 0, 'DIVISION_BY_ZERO') # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    PUSH nat 0; # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 2;      # nat : nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    COMPARE;    # int : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GT;         # bool : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {}
      {
        PUSH string "DIVISION_BY_ZERO"; # string : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }; # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # ratio = sp.local("ratio", sp.record(mantissa = (numerator.value.mantissa * self.data.expScale) // denominator.value.mantissa)) # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 4;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (big_map %collaterals address (set address)) (nat %expScale) : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 2;      # nat : nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MUL;        # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    EDIV;       # option (pair nat nat) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH int 244; # int : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # sp.result(((ratio.value.mantissa * params.actualRepayAmount) // self.data.expScale, sp.snd(sp.view("exchangeRateStoredView", sp.unit, params.cTokenCollateral, sp.TPair(sp.TNat, sp.TNat)).open_some(message = 'INVALID EXCHANGE RATE VIEW')))) # nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 2;      # @parameter : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 4;      # address : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    UNIT;       # unit : address : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    VIEW "exchangeRateStoredView" (pair nat nat); # option (pair nat nat) : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF_NONE
      {
        PUSH string "INVALID EXCHANGE RATE VIEW"; # string : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        FAILWITH;   # FAILED
      }
      {}; # @some : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CDR;        # nat : nat : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DIG 3;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : nat : nat : @parameter
    CAR;        # pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa))) : nat : nat : @parameter
    GET 3;      # pair (big_map %collaterals address (set address)) (nat %expScale) : nat : nat : @parameter
    CDR;        # nat : nat : nat : @parameter
    DIG 3;      # @parameter : nat : nat : nat
    CAR;        # nat : nat : nat : nat
    DIG 3;      # nat : nat : nat : nat
    MUL;        # nat : nat : nat
    EDIV;       # option (pair nat nat) : nat
    IF_NONE
      {
        PUSH int 61; # int : nat
        FAILWITH;   # FAILED
      }
      {
        CAR;        # nat : nat
      }; # nat : nat
    PAIR;       # pair nat nat
  };
view
  "seizeAllowed" (pair (address %cTokenBorrowed) (address %cTokenCollateral)) bool
  {
    UNPAIR 3;   # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))))
    DIG 2;      # big_map nat (lambda (pair (or (or (or (or unit (pair address (pair address nat))) (or address (or (list address) unit))) (or (or (pair (pair address address) (pair address (pair address nat))) (or (pair address (pair address nat)) (pair address (pair address nat)))) (or address (or (pair address (pair address (pair address nat))) address)))) (or (or (or (pair (pair address nat) (pair nat nat)) (or (pair address bool) nat)) (or (pair address nat) (or nat nat))) (or (or (pair address bool) (or address (pair address int))) (or bool (or (pair address (pair string nat)) (pair (pair address address) (pair address nat))))))) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool))))) (pair (list operation) (pair (pair (pair (pair (big_map address (pair int (pair nat bool))) (set nat)) (pair address nat)) (pair (pair (big_map address (set address)) nat) (pair nat nat))) (pair (pair (pair (big_map address (set address)) (map string address)) (pair (big_map address (pair (pair (pair bool nat) (pair bool bool)) (pair (pair string nat) (pair nat (pair timestamp nat))))) nat)) (pair (pair int address) (pair (option address) bool)))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DROP;       # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    # if (~ ((self.data.markets.contains(params.cTokenBorrowed)) & self.data.markets[params.cTokenBorrowed].isListed)) | (~ ((self.data.markets.contains(params.cTokenCollateral)) & self.data.markets[params.cTokenCollateral].isListed)): # @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    DUP 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    CAR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    MEM;        # bool : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {
        DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DUP 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        CAR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        IF_NONE
          {
            PUSH int 474; # int : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
            FAILWITH;   # FAILED
          }
          {}; # @some : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        CAR;        # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # bool : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }
      {
        PUSH bool False; # bool : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
      }; # bool : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
    IF
      {
        DUP 2;      # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        DUP 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        CDR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        MEM;        # bool : @parameter : pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused))))
        IF
          {
            SWAP;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
            GET 3;      # pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser)) : @parameter
            GET 3;      # big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
            DUP 2;      # @parameter : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
            CDR;        # address : big_map address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
            GET;        # option (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel))))) : @parameter
            IF_NONE
              {
                PUSH int 477; # int : @parameter
                FAILWITH;   # FAILED
              }
              {}; # @some : @parameter
            CAR;        # pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused)) : @parameter
            GET 3;      # bool : @parameter
            NOT;        # bool : @parameter
          }
          {
            SWAP;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
            DROP;       # @parameter
            PUSH bool True; # bool : @parameter
          }; # bool : @parameter
      }
      {
        SWAP;       # pair (pair (pair (pair (big_map %account_liquidity address (pair (int %liquidity) (pair (nat %updateLevel) (bool %valid)))) (set %activeOperations nat)) (pair (address %administrator) (nat %closeFactorMantissa))) (pair (pair (big_map %collaterals address (set address)) (nat %expScale)) (pair (nat %halfExpScale) (nat %liquidationIncentiveMantissa)))) (pair (pair (pair (big_map %loans address (set address)) (map %marketNameToAddress string address)) (pair (big_map %markets address (pair (pair (pair (bool %borrowPaused) (nat %collateralFactor)) (pair (bool %isListed) (bool %mintPaused))) (pair (pair (string %name) (nat %price)) (pair (nat %priceExp) (pair (timestamp %priceTimestamp) (nat %updateLevel)))))) (nat %maxAssetsPerUser))) (pair (pair (int %maxPriceTimeDifference) (address %oracleAddress)) (pair (option %pendingAdministrator address) (bool %transferPaused)))) : @parameter
        DROP;       # @parameter
        PUSH bool True; # bool : @parameter
      }; # bool : @parameter
    IF
      {
        DROP;       # 
        # sp.result(False) # 
        PUSH bool False; # bool
      }
      {
        # if sp.view("comptroller", sp.unit, params.cTokenBorrowed, sp.TAddress).is_variant('None') | sp.view("comptroller", sp.unit, params.cTokenCollateral, sp.TAddress).is_variant('None'): # @parameter
        DUP;        # @parameter : @parameter
        CAR;        # address : @parameter
        UNIT;       # unit : address : @parameter
        VIEW "comptroller" address; # option address : @parameter
        IF_NONE
          {
            PUSH bool True; # bool : @parameter
          }
          {
            DROP;       # @parameter
            DUP;        # @parameter : @parameter
            CDR;        # address : @parameter
            UNIT;       # unit : address : @parameter
            VIEW "comptroller" address; # option address : @parameter
            IF_NONE
              {
                PUSH bool True; # bool : @parameter
              }
              {
                DROP;       # @parameter
                PUSH bool False; # bool : @parameter
              }; # bool : @parameter
          }; # bool : @parameter
        IF
          {
            DROP;       # 
            # sp.result(False) # 
            PUSH bool False; # bool
          }
          {
            # sp.result(sp.view("comptroller", sp.unit, params.cTokenBorrowed, sp.TAddress).open_some() == sp.view("comptroller", sp.unit, params.cTokenCollateral, sp.TAddress).open_some()) # @parameter
            DUP;        # @parameter : @parameter
            CDR;        # address : @parameter
            UNIT;       # unit : address : @parameter
            VIEW "comptroller" address; # option address : @parameter
            IF_NONE
              {
                PUSH int 489; # int : @parameter
                FAILWITH;   # FAILED
              }
              {}; # @some : @parameter
            SWAP;       # @parameter : @some
            CAR;        # address : @some
            UNIT;       # unit : address : @some
            VIEW "comptroller" address; # option address : @some
            IF_NONE
              {
                PUSH int 488; # int : @some
                FAILWITH;   # FAILED
              }
              {}; # @some : @some
            COMPARE;    # int
            EQ;         # bool
          }; # bool
      }; # bool
  };