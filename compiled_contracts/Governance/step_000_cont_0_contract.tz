parameter (or (or (or (unit %acceptGovernance) (unit %receive)) (or (address %setPendingGovernance) (pair %setPriceOracleAndTimeDiff (address %comptroller) (pair (address %priceOracle) (int %timeDiff))))) (or (or (or (or (address %acceptContractGovernance) (pair %disableMarket (address %cToken) (address %comptroller))) (or (pair %reduceReserves (nat %amount) (address %cToken)) (or (pair %setAccrualIntPeriodRelevance (nat %blockNumber) (address %cToken)) (pair %setBorrowPaused (address %comptroller) (pair %tokenState (address %cToken) (bool %state)))))) (or (or (pair %setCloseFactor (nat %closeFactor) (address %comptroller)) (pair %setCollateralFactor (pair %collateralFactor (address %cToken) (nat %newCollateralFactor)) (address %comptroller))) (or (pair %setComptroller (address %cToken) (address %comptroller)) (or (pair %setContractGovernance (address %contractAddress) (address %governance)) (pair %setInterestRateModel (address %cToken) (address %interestRateModel)))))) (or (or (or (pair %setLiquidationIncentive (address %comptroller) (nat %liquidationIncentive)) (pair %setLiquidityPeriodRelevance (nat %blockNumber) (address %comptroller))) (or (pair %setMintPaused (address %comptroller) (pair %tokenState (address %cToken) (bool %state))) (or (pair %setPricePeriodRelevance (nat %blockNumber) (address %comptroller)) (pair %setReserveFactor (address %cToken) (nat %newReserveFactor))))) (or (or (pair %setTransferPaused (address %comptroller) (bool %state)) (or (pair %supportMarket (address %comptroller) (pair %market (address %cToken) (pair (string %name) (nat %priceExp)))) (pair %sweepFA12 (nat %amount) (address %tokenAddress)))) (or (pair %sweepFA2 (nat %amount) (pair (nat %id) (address %tokenAddress))) (or (bool %sweepMutez) (pair %updateMetadata (address %cToken) (pair (string %key) (bytes %value)))))))));
storage   (pair (pair (address %administrator) (option %pendingAdministrator address)) (big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))));
code
  {
    UNPAIR 3;   # @parameter : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
    IF_LEFT
      {
        DUP;        # @parameter.left : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        IF_LEFT
          {
            IF_LEFT
              {
                DROP;       # @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                PUSH nat 0; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }
              {
                DROP;       # @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                PUSH nat 1; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
          }
          {
            IF_LEFT
              {
                DROP;       # @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                PUSH nat 2; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }
              {
                DROP;       # @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                PUSH nat 3; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
          }; # nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        DUP 4;      # big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address)))) : nat : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        SWAP;       # nat : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address)))) : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        GET;        # option (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address)))) : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        IF_NONE
          {
            PUSH int -1; # int : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
            FAILWITH;   # FAILED
          }
          {}; # @some : @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        DUG 2;      # @parameter.left : pair (address %administrator) (option %pendingAdministrator address) : @some : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        PAIR;       # pair @parameter.left (pair (address %administrator) (option %pendingAdministrator address)) : @some : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        EXEC;       # pair (list operation) (pair address (option address)) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
        UNPAIR;     # list operation : pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%acceptContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %acceptGovernance unit; # option (contract unit) : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 74; # int : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @some : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SWAP;       # @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        UNIT;       # unit : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%disableMarket : list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # address : list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %disableMarket address; # option (contract address) : list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 305; # int : list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%disableMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%disableMarket : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%reduceReserves : list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # address : list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %reduceReserves nat; # option (contract nat) : list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 187; # int : list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%reduceReserves : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%reduceReserves : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        IF_LEFT
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%setAccrualIntPeriodRelevance : list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # address : list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %setAccrualIntPeriodRelevance nat; # option (contract nat) : list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 90; # int : list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%setAccrualIntPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%setAccrualIntPeriodRelevance : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%setBorrowPaused : list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %setBorrowPaused (pair (address %cToken) (bool %state)); # option (contract (pair (address %cToken) (bool %state))) : list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 343; # int : list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%setBorrowPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%setBorrowPaused : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # pair (address %cToken) (bool %state) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setCloseFactor : list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # address : list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setCloseFactor nat; # option (contract nat) : list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 236; # int : list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setCloseFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setCloseFactor : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setCollateralFactor : list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # address : list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setCollateralFactor (pair (address %cToken) (nat %newCollateralFactor)); # option (contract (pair (address %cToken) (nat %newCollateralFactor))) : list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 254; # int : list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setCollateralFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setCollateralFactor : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # pair (address %cToken) (nat %newCollateralFactor) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setComptroller : list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setComptroller address; # option (contract address) : list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 140; # int : list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setComptroller : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setComptroller : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # address : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        IF_LEFT
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%setContractGovernance : list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %setPendingGovernance address; # option (contract address) : list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 61; # int : list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%setContractGovernance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%setContractGovernance : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # address : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%setInterestRateModel : list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %setInterestRateModel address; # option (contract address) : list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 156; # int : list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%setInterestRateModel : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%setInterestRateModel : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # address : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setLiquidationIncentive : list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setLiquidationIncentive nat; # option (contract nat) : list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 270; # int : list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setLiquidationIncentive : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setLiquidationIncentive : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setLiquidityPeriodRelevance : list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # address : list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setLiquidityPeriodRelevance nat; # option (contract nat) : list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 122; # int : list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setLiquidityPeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setLiquidityPeriodRelevance : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setMintPaused : list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setMintPaused (pair (address %cToken) (bool %state)); # option (contract (pair (address %cToken) (bool %state))) : list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 325; # int : list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setMintPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setMintPaused : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # pair (address %cToken) (bool %state) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        IF_LEFT
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%setPricePeriodRelevance : list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # address : list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %setPricePeriodRelevance nat; # option (contract nat) : list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 106; # int : list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%setPricePeriodRelevance : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%setPricePeriodRelevance : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%setReserveFactor : list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %setReserveFactor nat; # option (contract nat) : list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 172; # int : list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%setReserveFactor : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%setReserveFactor : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }
              {
                IF_LEFT
                  {
                    IF_LEFT
                      {
                        DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SENDER;     # @sender : address : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : address : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        COMPARE;    # int : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        EQ;         # bool : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF
                          {}
                          {
                            PUSH string "GOV_NOT_ADMIN"; # string : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }; # @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL operation; # list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%setTransferPaused : list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %setTransferPaused bool; # option (contract bool) : list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 359; # int : list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%setTransferPaused : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 3;      # @parameter%setTransferPaused : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CDR;        # bool : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        IF_LEFT
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%supportMarket : list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %supportMarket (pair (address %cToken) (pair (string %name) (nat %priceExp))); # option (contract (pair (address %cToken) (pair (string %name) (nat %priceExp)))) : list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 289; # int : list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%supportMarket : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%supportMarket : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # pair (address %cToken) (pair (string %name) (nat %priceExp)) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }
                          {
                            NIL operation; # list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%sweepFA12 : list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CDR;        # address : list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 17; # int : list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%sweepFA12 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%sweepFA12 : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 5;      # pair (address %administrator) (option %pendingAdministrator address) : nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : nat : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PAIR 3;     # pair address (pair address nat) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }
                  {
                    IF_LEFT
                      {
                        NIL operation; # list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 2;      # @parameter%sweepFA2 : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        GET 4;      # address : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        IF_NONE
                          {
                            PUSH int 43; # int : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%sweepFA2 : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DIG 5;      # @parameter%sweepFA2 : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP;        # @parameter%sweepFA2 : @parameter%sweepFA2 : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # nat : @parameter%sweepFA2 : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SWAP;       # @parameter%sweepFA2 : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        DUP 8;      # pair (address %administrator) (option %pendingAdministrator address) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CAR;        # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        RENAME;     # address : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        PAIR;       # pair address (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                        CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }
                      {
                        IF_LEFT
                          {
                            IF
                              {
                                NIL operation; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                CAR;        # address : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                CONTRACT %receive unit; # option (contract unit) : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                IF_NONE
                                  {
                                    PUSH int 21; # int : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                BALANCE;    # @balance : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                RENAME;     # mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                UNIT;       # unit : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                              }
                              {
                                NIL operation; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                CAR;        # address : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                CONTRACT unit; # option (contract unit) : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                IF_NONE
                                  {
                                    PUSH int 24; # int : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                BALANCE;    # @balance : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                RENAME;     # mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                UNIT;       # unit : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                              }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }
                          {
                            DUP 2;      # pair (address %administrator) (option %pendingAdministrator address) : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SENDER;     # @sender : address : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            RENAME;     # address : address : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            COMPARE;    # int : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            EQ;         # bool : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF
                              {}
                              {
                                PUSH string "GOV_NOT_ADMIN"; # string : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }; # @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            NIL operation; # list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP 2;      # @parameter%updateMetadata : list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CAR;        # address : list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONTRACT %updateMetadata (pair (string %key) (bytes %value)); # option (contract (pair (string %key) (bytes %value))) : list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            IF_NONE
                              {
                                PUSH int 203; # int : list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PUSH mutez 0; # mutez : @some : list operation : @parameter%updateMetadata : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DIG 3;      # @parameter%updateMetadata : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            DUP;        # @parameter%updateMetadata : @parameter%updateMetadata : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            GET 4;      # bytes : @parameter%updateMetadata : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            SWAP;       # @parameter%updateMetadata : bytes : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            GET 3;      # string : bytes : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            PAIR;       # pair string bytes : mutez : @some : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            TRANSFER_TOKENS; # operation : list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                            CONS;       # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                          }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                      }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
                  }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
              }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
          }; # list operation : pair (address %administrator) (option %pendingAdministrator address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
      }; # list operation : pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
    NIL operation; # list operation : list operation : pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
    SWAP;       # list operation : list operation : pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
    ITER
      {
        CONS;       # list operation : pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
      }; # list operation : pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))
    DUG 2;      # pair address (option address) : big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address)))) : list operation
    PAIR;       # pair (pair address (option address)) (big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))) : list operation
    SWAP;       # list operation : pair (pair address (option address)) (big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address)))))
    PAIR;       # pair (list operation) (pair (pair address (option address)) (big_map nat (lambda (pair (or (or unit unit) (or address (pair address (pair address int)))) (pair address (option address))) (pair (list operation) (pair address (option address))))))
  };